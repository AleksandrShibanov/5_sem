pl1 <- hist(df$V1,
breaks = seq(min_el, max_el, by = bin_width),
xlim = c(0, 20), axes = F, freq = F,
main = "Histogram of data")
axis(1, seq(0, 20, 1))
axis(2, seq(0.00, 0.10, 0.02), las = 1)
grid(nx = 20, ny = seq(0.02, 0.08, 0.02))
grid(nx = 20, ny = 20)
grid(nx = 20, ny = 8)
par(mar = c(3, 3, 2, 1), xaxs = "i", yaxs = "i", tck = 0.8) # graphical parametrs
pl1 <- hist(df$V1,
breaks = seq(min_el, max_el, by = bin_width),
xlim = c(0, 20), axes = F, freq = F,
main = "Histogram of data")
axis(1, seq(0, 20, 1))
axis(2, seq(0.00, 0.10, 0.02), las = 1)
par(mar = c(3, 3, 2, 1), xaxs = "i", yaxs = "i", tck = 1, lty = 3) # graphical parametrs
pl1 <- hist(df$V1,
breaks = seq(min_el, max_el, by = bin_width),
xlim = c(0, 20), axes = F, freq = F,
main = "Histogram of data")
axis(1, seq(0, 20, 1))
axis(2, seq(0.00, 0.10, 0.02), las = 1)
par(mar = c(3, 3, 2, 1), xaxs = "i", yaxs = "i") # graphical parametrs
pl1 <- hist(df$V1,
breaks = seq(min_el, max_el, by = bin_width),
xlim = c(0, 20), axes = F, freq = F,
main = "Histogram of data")
axis(1, seq(0, 20, 1))
axis(2, seq(0.00, 0.10, 0.02), las = 1)
grid(nx = 20, ny = 8)
dev.off()
png(filename = "../img/hist_without_dens.png",
width = 1920, height = 1080,
pointsize = 24, res = 96)
par(mar = c(3, 3, 2, 1), xaxs = "i", yaxs = "i") # graphical parametrs
pl1 <- hist(df$V1,
breaks = seq(min_el, max_el, by = bin_width),
xlim = c(0, 20), axes = F, freq = F,
main = "Histogram of data")
axis(1, seq(0, 20, 1))
axis(2, seq(0.00, 0.10, 0.02), las = 1)
grid(nx = 20, ny = 8)
dev.off()
png(filename = "../img/hist_without_dens.png",
width = 1920, height = 1080,
pointsize = 24, res = 96)
par(mar = c(3, 3, 2, 1), xaxs = "i", yaxs = "i") # graphical parametrs
pl1 <- hist(df$V1,
breaks = seq(min_el, max_el, by = bin_width),
xlim = c(0, 20), axes = F, freq = F,
main = "Histogram of data")
axis(1, seq(0, 20, 1))
axis(2, seq(0.00, 0.10, 0.02), las = 1)
grid(nx = 20, ny = 4)
dev.off()
pl1 <- hist(df$V1,
breaks = seq(min_el, max_el, by = bin_width),
xlim = c(0, 20), axes = F, freq = F,
main = "Histogram of data")
axis(1, seq(0, 20, 1))
axis(2, seq(0.00, 0.10, 0.02), las = 1)
grid(nx = 20, ny = 4)
par(mar = c(3, 3, 2, 1), xaxs = "i", yaxs = "i") # graphical parametrs
pl1 <- hist(df$V1,
breaks = seq(min_el, max_el, by = bin_width),
xlim = c(0, 20), axes = F, freq = F,
main = "Histogram of data")
axis(1, seq(0, 20, 1))
axis(2, seq(0.00, 0.10, 0.02), las = 1)
grid(nx = 20, ny = 4)
grid(nx = 20, ny = 10)
pl1 <- hist(df$V1,
breaks = seq(min_el, max_el, by = bin_width),
xlim = c(0, 20), axes = F, freq = F,
main = "Histogram of data")
axis(1, seq(0, 20, 1))
axis(2, seq(0.00, 0.10, 0.02), las = 1)
grid(nx = 20, ny = 10)
pl1 <- hist(df$V1,
breaks = seq(min_el, max_el, by = bin_width),
xlim = c(0, 20), axes = F, freq = F,
main = "Histogram of data")
axis(1, seq(0, 20, 1))
axis(2, seq(0.00, 0.10, 0.02), las = 1)
grid(nx = 20, ny = 8)
pl1 <- hist(df$V1,
breaks = seq(min_el, max_el, by = bin_width),
xlim = c(0, 20), axes = F, freq = F,
main = "Histogram of data")
axis(1, seq(0, 20, 1))
axis(2, seq(0.00, 0.10, 0.02), las = 1)
grid(nx = 20, ny = 7)
dev.off()
par(mar = c(3, 3, 2, 1), xaxs = "i", yaxs = "i") # graphical parametrs
pl1 <- hist(df$V1,
breaks = seq(min_el, max_el, by = bin_width),
xlim = c(0, 20), axes = F, freq = F,
main = "Histogram of data")
axis(1, seq(0, 20, 1))
axis(2, seq(0.00, 0.10, 0.02), las = 1)
grid(nx = 20, ny = 7)
grid(nx = 20, ny = 7, equilogs = F)
par(mar = c(3, 3, 2, 1), xaxs = "i", yaxs = "i") # graphical parametrs
pl1 <- hist(df$V1,
breaks = seq(min_el, max_el, by = bin_width),
xlim = c(0, 20), axes = F, freq = F,
main = "Histogram of data")
axis(1, seq(0, 20, 1))
axis(2, seq(0.00, 0.10, 0.02), las = 1)
grid(nx = 20, ny = 7, equilogs = F)
par(mar = c(3, 3, 2, 1), xaxs = "i", yaxs = "i") # graphical parametrs
pl1 <- hist(df$V1,
breaks = seq(min_el, max_el, by = bin_width),
xlim = c(0, 20), axes = F, freq = F,
main = "Histogram of data")
axis(1, seq(0, 20, 1))
axis(2, seq(0.00, 0.10, 0.01), las = 1)
grid(nx = 20, ny = 7, equilogs = F)
dev.off()
par(mar = c(3, 3, 2, 1), xaxs = "i", yaxs = "i") # graphical parametrs
pl1 <- hist(df$V1,
breaks = seq(min_el, max_el, by = bin_width),
xlim = c(0, 20), axes = F, freq = F,
main = "Histogram of data")
axis(1, seq(0, 20, 1))
axis(2, seq(0.00, 0.10, 0.01), las = 1)
grid(nx = 20, ny = 7, equilogs = F)
pl1 <- hist(df$V1,
breaks = seq(min_el, max_el, by = bin_width),
xlim = c(0, 20), ylim = c(0.00,0.10), axes = F, freq = F,
main = "Histogram of data")
axis(1, seq(0, 20, 1))
axis(2, seq(0.00, 0.10, 0.01), las = 1)
grid(nx = 20, ny = 7, equilogs = F)
grid(nx = 20, ny = 10, equilogs = F)
png(filename = "../img/hist_without_dens.png",
width = 1920, height = 1080,
pointsize = 24, res = 96)
par(mar = c(3, 3, 2, 1), xaxs = "i", yaxs = "i") # graphical parametrs
pl1 <- hist(df$V1,
breaks = seq(min_el, max_el, by = bin_width),
xlim = c(0, 20), ylim = c(0.00,0.10), axes = F, freq = F,
main = "Histogram of data")
axis(1, seq(0, 20, 1))
axis(2, seq(0.00, 0.10, 0.01), las = 1)
grid(nx = 20, ny = 10, equilogs = F)
dev.off()
par(mar = c(3, 3, 2, 1), xaxs = "i", yaxs = "i") # graphical parametrs
pl1 <- hist(df$V1,
breaks = seq(min_el, max_el, by = bin_width),
xlim = c(0, 20), ylim = c(0.00,0.10), axes = F, freq = F,
main = "Histogram of data")
axis(1, seq(0, 20, 1))
axis(2, seq(0.00, 0.10, 0.01), las = 1)
grid(nx = 20, ny = 10, equilogs = F)
png(filename = "../img/hist_without_dens.png",
width = 1920, height = 1080,
pointsize = 24, res = 96 * 2)
par(mar = c(3, 3, 2, 1), xaxs = "i", yaxs = "i") # graphical parametrs
pl1 <- hist(df$V1,
breaks = seq(min_el, max_el, by = bin_width),
xlim = c(0, 20), ylim = c(0.00,0.10), axes = F, freq = F,
main = "Histogram of data")
axis(1, seq(0, 20, 1))
axis(2, seq(0.00, 0.10, 0.01), las = 1)
grid(nx = 20, ny = 10, equilogs = F)
dev.off()
png(filename = "../img/hist_without_dens.png",
width = 1920, height = 1080,
pointsize = 24, res = 96 * 1,25)
par(mar = c(3, 3, 2, 1), xaxs = "i", yaxs = "i") # graphical parametrs
pl1 <- hist(df$V1,
breaks = seq(min_el, max_el, by = bin_width),
xlim = c(0, 20), ylim = c(0.00,0.10), axes = F, freq = F,
main = "Histogram of data")
axis(1, seq(0, 20, 1))
axis(2, seq(0.00, 0.10, 0.01), las = 1)
grid(nx = 20, ny = 10, equilogs = F)
dev.off()
png(filename = "../img/hist_without_dens.png",
width = 1920, height = 1080,
pointsize = 24, res = 96 * 1.25)
par(mar = c(3, 3, 2, 1), xaxs = "i", yaxs = "i") # graphical parametrs
pl1 <- hist(df$V1,
breaks = seq(min_el, max_el, by = bin_width),
xlim = c(0, 20), ylim = c(0.00,0.10), axes = F, freq = F,
main = "Histogram of data")
axis(1, seq(0, 20, 1))
axis(2, seq(0.00, 0.10, 0.01), las = 1)
grid(nx = 20, ny = 10, equilogs = F)
dev.off()
png(filename = "../img/hist_without_dens.png",
width = 1920, height = 1080,
pointsize = 24, res = 96 * 1.25)
par(mar = c(3, 3, 2, 1), xaxs = "i", yaxs = "i") # graphical parametrs
pl1 <- hist(df$V1,
breaks = seq(min_el, max_el, by = bin_width),
xlim = c(0, 20), ylim = c(0.00,0.10), axes = F, freq = F,
main = "Histogram of data", lwd = 2)
axis(1, seq(0, 20, 1))
axis(2, seq(0.00, 0.10, 0.01), las = 1)
grid(nx = 20, ny = 10, equilogs = F)
dev.off()
hist(df$V1,
breaks = seq(min_el, max_el, by = bin_width),
xlim = c(0, 20), ylim = c(0.00,0.10), axes = F, freq = F,
main = "Histogram of data", lwd = 2)
hist(df$V1,
breaks = seq(min_el, max_el, by = bin_width),
xlim = c(0, 20), ylim = c(0.00,0.10), axes = F, freq = F,
main = "Histogram of data", lwd = 3)
png(filename = "../img/hist_without_dens.png",
width = 1920, height = 1080,
pointsize = 24, res = 96 * 1.25)
par(mar = c(3, 3, 2, 1), xaxs = "i", yaxs = "i") # graphical parametrs
pl1 <- hist(df$V1,
breaks = seq(min_el, max_el, by = bin_width),
xlim = c(0, 20), ylim = c(0.00,0.10), axes = F, freq = F,
main = "Histogram of data")
axis(1, seq(0, 20, 1))
axis(2, seq(0.00, 0.10, 0.01), las = 1)
grid(nx = 20, ny = 10, equilogs = F)
dev.off()
pl1$mids
par(mar = c(3, 3, 2, 1), xaxs = "i", yaxs = "i") # graphical parametrs
pl1 <- hist(df$V1,
breaks = seq(min_el, max_el, by = bin_width),
xlim = c(0, 20), ylim = c(0.00,0.10), axes = F, freq = F,
main = "Histogram of data")
axis(1, seq(0, 20, 1))
axis(2, seq(0.00, 0.10, 0.01), las = 1)
grid(nx = 20, ny = 10, equilogs = F)
pl1$breaks
pl1$counts
png(filename = "../img/hist_without_dens.png",
width = 1920, height = 1080,
pointsize = 24, res = 96 * 1.25)
par(mar = c(3, 3, 2, 1), xaxs = "i", yaxs = "i") # graphical parametrs
pl1 <- hist(df$V1,
breaks = seq(min_el, max_el, by = bin_width),
xlim = c(0, 20), ylim = c(0.00,0.10), axes = F, freq = F,
main = "Histogram of data")
axis(1, seq(0, 20, 1))
axis(2, seq(0.00, 0.10, 0.01), las = 1)
grid(nx = 20, ny = 10, equilogs = F)
dev.off()
# graphical parametrs
pl1$equidist
pl1$density
pl1$counts / length(df$V1)
pl1$counts
relative_freq <- pl1$counts / length(df$V1)
relative_freq
relative_freq <- pl1$counts / length(df$V1)
relative_freq
mean_el <- mean(df$V1)
var_el <- var(df$V1)
moda_el <- moda(df$V1)
library(math)
library(dprep)
install.packages("dprep")
moda_el <- function(x) {
keys <- unique(df$V1)
keys[which.max(tabulate(match(df$V1, keys)))]
}
moda_el
getMode  <- function(x) {
keys <- unique(x)
keys[which.max(tabulate(match(x, keys)))]
}
library(base)
mode_el <- mode(df$V1)
mode_el
install.packages("DescTools")
library(DescTools)
mode_el <- mode(df$V1)
mode_el <- Mode(df$V1)
df$V1
median_el <- median(df$V1)
mean_el <- mean(df$V1)
mean_el
median_el <- median(df$V1)
median_el
var_el <- var(df$V1)
range_el
var_el <- var(df$V1)
var_el
sd_el <- sd(df$V1)
sd_el
range_el
var_el <- var(df$V1)
var_el
sd_el <- sd(df$V1)
sd_el
descdist(df$V1)
dev.off()
descdist(df$V1)
fit.uniform <- fitdist(df$V1, "dunif")
fit.uniform <- fitdist(df$V1, "unif")
plot(fit.uniform)
fit.uniform$aic
fit.norm$aic
fit.weibull$aic
fit.uniform$cor
descdist(df$V1)
par(mar = c(3, 3, 2, 1), xaxs = "i", yaxs = "i")
pl1 <- hist(df$V1,
breaks = seq(min_el, max_el, by = bin_width),
xlim = c(0, 20), ylim = c(0.00,0.10), axes = F, freq = F,
main = "Histogram of data")
axis(1, seq(0, 20, 1))
axis(2, seq(0.00, 0.10, 0.01), las = 1)
grid(nx = 20, ny = 10, equilogs = F)
lines(density(x))
lines(density(df$V1))
fit.beta <- fitdist(df$V1, "beta")
df$V1
scale(df$V1)
lines(density(df$V1), scale = F)
scale(df$V1, scale = F)
scale(df$V1, scale = F)
library(scales)
rescale(df$V1)
fit.beta <- fitdist(rescale(df$V1), "beta")
res <- rescale(df$V1)
fit.beta <- fitdist(res, "beta")
dev.off()
descdist(df$V1)
descdist(df$V1,method = "sample")
descdist(df$V1,method = "sample", boot = 1e6)
descdist(df$V1,method = "sample", boot = 1e4)
png(filename = "../img/cullen_and_frey_graph.png",
width = 1920, height = 1080,
pointsize = 24, res = 96 * 1.25)
descdist(df$V1,method = "sample", boot = 1e4)
dev.off()
fit.uniform$estimate
fit.uniform$vcov
fit.uniform$bic
fit.uniform$aic
fit.uniform$convergence
fit.uniform
fit.beta <- fitdist(res, "beta")
fit.beta <- fitdist(res, "beta", method = "mme")
descdist(df$V1,method = "sample", boot = 1e4, method = "mme")
fit.weibull <- fitdist(df$V1, "weibull", method = "mme")
fit.norm <- fitdist(df$V1, "norm", method = "mme")
fit.uniform <- fitdist(df$V1, "unif", method = "mme")
fit.beta <- fitdist(res, "beta", method = "mme")
plot(fit.norm)
fit.weibull <- fitdist(df$V1, "weibull", method = "mme")
fit.norm <- fitdist(df$V1, "norm", method = "mme")
fit.uniform <- fitdist(df$V1, "unif", method = "mme")
fit.beta <- fitdist(res, "beta", method = "mme")
plot(fit.norm)
plot(fit.weibull)
plot(fit.uniform)
plot(fit.beta)
cdfcomp(list(fit.norm, fit.weibull), legendtext = c("normal", "weibull"))
denscomp(list(fit.norm, fit.weibull), legendtext = c("normal", "weibull"))
qqcomp(list(fit.norm, fit.weibull), legendtext = c("normal", "weibull"))
ppcomp(list(fit.norm, fit.weibull), legendtext = c("normal", "weibull"))
gofstat(list(fit.norm, fit.weibull), fitnames = c("normal", "weibull"))
gofstat(list(fit.norm, fit.weibull, fit.beta, fit.uniform), fitnames = c("normal", "weibull", "beta", "uniform"))
gofstat(list(fit.norm, fit.weibull), fitnames = c("normal", "weibull"))
gofstat(list(fit.beta, fit.uniform), fitnames = c("beta", "uniform"))
gofstat(list(fit.beta), fitnames = c("beta"))
gofstat(fit.beta, fitnames = c("beta"))
gofstat(list(fit.norm, fit.weibull, fit.uniform), fitnames = c("normal", "weibull", "uniform"))
gofstat(fit.beta, fitnames = c("beta"))
gofstat(fit.beta, fitnames = c("beta"))[,1:2]
gofstat(fit.beta, fitnames = c("beta"))[1:2,]
gofstat(fit.beta, fitnames = c("beta"))[2,]
gofstat(fit.beta, fitnames = c("beta"))[2]
gofstat(fit.beta, fitnames = c("beta"))[1]
gofstat(fit.beta, fitnames = c("beta"))[3]
gofstat(fit.beta, fitnames = c("beta"))
res <- rescale(df$V1)
res
res <- rescale(df$V1)
res
res <- rescale(df$V1)
res
fit.norm <- fitdist(df$V1, "norm", method = "mme")
fit.uniform <- fitdist(df$V1, "unif", method = "mme")
fit.beta <- fitdist(res, "beta", method = "mme")
gofstat(list(fit.norm, fit.weibull, fit.uniform), fitnames = c("normal", "weibull", "uniform"))
gofstat(fit.beta, fitnames = c("beta"))
gofstat(list(fit.norm, fit.weibull, fit.uniform), fitnames = c("normal", "uniform"))
gofstat(fit.beta, fitnames = c("beta"))
gofstat(list(fit.norm, fit.uniform), fitnames = c("normal", "uniform"))
gofstat(fit.beta, fitnames = c("beta"))
stat_normal <- gofstat(list(fit.norm), fitnames = c("normal"))
stat_normal <- gofstat(fit.norm, fitnames = c("normal"))
stat_unif <- gofstat(fit.uniform, fitnames = c("uniform"))
stat_beta <- gofstat(fit.beta, fitnames = c("beta"))
stat_beta$chisqtable
stat_beta$cvm
stat_beta$cvmtest
stat_normal$cvm
stat_normal$cvmtest
stat_normal
stat_unif
stat_beta
stat_table <- cbind(rbind(stat_normal$ks, stat_normal$cvm),
rbind(stat_unif$ks, stat_unif$cvm),
rbind(stat_beta$ks, stat_beta$cvm))
stat_table
rownames(stat_table) <- c("Kolmogorov-Smirnov statistic", "Cramer-von Mises statistic")
stat_table
stat_normal <- gofstat(fit.norm, fitnames = c("normal"))
stat_unif <- gofstat(fit.uniform, fitnames = c("uniform"))
stat_beta <- gofstat(fit.beta, fitnames = c("beta"))
stat_table <- cbind(rbind(stat_normal$ks, stat_normal$cvm),
rbind(stat_unif$ks, stat_unif$cvm),
rbind(stat_beta$ks, stat_beta$cvm))
rownames(stat_table) <- c("Kolmogorov-Smirnov statistic", "Cramer-von Mises statistic")
stat_table
stat_normal <- gofstat(fit.norm, fitnames = c("normal"))
stat_unif <- gofstat(fit.uniform, fitnames = c("uniform"))
stat_beta <- gofstat(fit.beta, fitnames = c("beta"))
stat_table <- cbind(rbind(stat_normal$ks, stat_normal$cvm),
rbind(stat_unif$ks, stat_unif$cvm),
rbind(stat_beta$ks, stat_beta$cvm))
rownames(stat_table) <- c("Kolmogorov-Smirnov statistic", "Cramer-von Mises statistic")
stat_table
stat_normal <- gofstat(fit.norm,
fitnames = c("normal"))
stat_unif <- gofstat(fit.uniform,
fitnames = c("uniform"))
stat_beta <- gofstat(fit.beta,
fitnames = c("beta"))
stat_table <- cbind(rbind(stat_normal$ks, stat_normal$cvm),
rbind(stat_unif$ks, stat_unif$cvm),
rbind(stat_beta$ks, stat_beta$cvm))
rownames(stat_table) <- c("Kolmogorov-Smirnov statistic", "Cramer-von Mises statistic")
stat_table
stat_normal <- gofstat(fit.norm,
fitnames = c("normal"))
stat_unif <- gofstat(fit.uniform,
fitnames = c("uniform"))
stat_beta <- gofstat(fit.beta,
fitnames = c("beta"))
stat_table <- cbind(rbind(stat_normal$ks, stat_normal$cvm),
rbind(stat_unif$ks, stat_unif$cvm),
rbind(stat_beta$ks, stat_beta$cvm))
rownames(stat_table) <- c("Kolmogorov-Smirnov statistic",
"Cramer-von Mises statistic")
stat_table
quantile(fit.norm, probs = 0.05)
quantile(fit.beta, probs = 0.05)
quantile(fit.uniform, probs = 0.05)
plot(fit.norm)
fit.norm <- fitdist(df$V1, "norm", method = "mme", breks = seq(min_el, max_el, by = bin_width))
plot(fit.norm)
fit.norm <- fitdist(df$V1, "norm", method = "mme", breaks = seq(min_el, max_el, by = bin_width))
plot(fit.norm)
fit.norm <- fitdist(df$V1, "norm", method = "mme",
breaks = seq(min_el, max_el, by = bin_width))
fit.norm <- fitdist(df$V1, "norm", method = "mme",
breaks = seq(min_el, max_el, by = bin_width))
plot(fit.norm)
plot(fit.weibull)
plot(fit.uniform)
fit.norm <- fitdist(df$V1, "norm", method = "mme")
plot(fit.norm)
plot(fit.uniform)
plot(fit.beta)
png(filename = c("../img/fit_norm.png",
"../img/fit_unif.png",
"../img/fit_beta.png" ),
width = 1920, height = 1080,
pointsize = 24, res = 96 * 1.25)
plot(fit.norm)
plot(fit.uniform)
plot(fit.beta)
dev.off()
png(filename = c("../img/fit_norm.png",
"../img/fit_unif.png",
"../img/fit_beta.png" ),
width = 1920, height = 1080,
pointsize = 24, res = 96 * 1.25)
plot(fit.norm)
plot(fit.uniform)
plot(fit.beta)
dev.off()
png(filename = "../img/fit_norm.png",
width = 1920, height = 1080,
pointsize = 24, res = 96 * 1.25)
plot(fit.norm)
dev.off()
png(filename = "../img/fit_norm.png",
width = 1920, height = 1080,
pointsize = 24, res = 96 * 1)
plot(fit.norm)
dev.off()
png(filename = "../img/fit_norm.png",
width = 1920, height = 1080,
pointsize = 24, res = 96 * 1)
plot(fit.norm)
dev.off()
png(filename = "../img/fit_unif.png",
width = 1920, height = 1080,
pointsize = 24, res = 96 * 1)
plot(fit.uniform)
dev.off()
png(filename = "../img/fit_beta.png",
width = 1920, height = 1080,
pointsize = 24, res = 96 * 1)
plot(fit.beta)
dev.off()
