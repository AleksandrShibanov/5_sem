scale(df$V1, scale = F)
library(scales)
rescale(df$V1)
fit.beta <- fitdist(rescale(df$V1), "beta")
res <- rescale(df$V1)
fit.beta <- fitdist(res, "beta")
dev.off()
descdist(df$V1)
descdist(df$V1,method = "sample")
descdist(df$V1,method = "sample", boot = 1e6)
descdist(df$V1,method = "sample", boot = 1e4)
png(filename = "../img/cullen_and_frey_graph.png",
width = 1920, height = 1080,
pointsize = 24, res = 96 * 1.25)
descdist(df$V1,method = "sample", boot = 1e4)
dev.off()
fit.uniform$estimate
fit.uniform$vcov
fit.uniform$bic
fit.uniform$aic
fit.uniform$convergence
fit.uniform
fit.beta <- fitdist(res, "beta")
fit.beta <- fitdist(res, "beta", method = "mme")
descdist(df$V1,method = "sample", boot = 1e4, method = "mme")
fit.weibull <- fitdist(df$V1, "weibull", method = "mme")
fit.norm <- fitdist(df$V1, "norm", method = "mme")
fit.uniform <- fitdist(df$V1, "unif", method = "mme")
fit.beta <- fitdist(res, "beta", method = "mme")
plot(fit.norm)
fit.weibull <- fitdist(df$V1, "weibull", method = "mme")
fit.norm <- fitdist(df$V1, "norm", method = "mme")
fit.uniform <- fitdist(df$V1, "unif", method = "mme")
fit.beta <- fitdist(res, "beta", method = "mme")
plot(fit.norm)
plot(fit.weibull)
plot(fit.uniform)
plot(fit.beta)
cdfcomp(list(fit.norm, fit.weibull), legendtext = c("normal", "weibull"))
denscomp(list(fit.norm, fit.weibull), legendtext = c("normal", "weibull"))
qqcomp(list(fit.norm, fit.weibull), legendtext = c("normal", "weibull"))
ppcomp(list(fit.norm, fit.weibull), legendtext = c("normal", "weibull"))
gofstat(list(fit.norm, fit.weibull), fitnames = c("normal", "weibull"))
gofstat(list(fit.norm, fit.weibull, fit.beta, fit.uniform), fitnames = c("normal", "weibull", "beta", "uniform"))
gofstat(list(fit.norm, fit.weibull), fitnames = c("normal", "weibull"))
gofstat(list(fit.beta, fit.uniform), fitnames = c("beta", "uniform"))
gofstat(list(fit.beta), fitnames = c("beta"))
gofstat(fit.beta, fitnames = c("beta"))
gofstat(list(fit.norm, fit.weibull, fit.uniform), fitnames = c("normal", "weibull", "uniform"))
gofstat(fit.beta, fitnames = c("beta"))
gofstat(fit.beta, fitnames = c("beta"))[,1:2]
gofstat(fit.beta, fitnames = c("beta"))[1:2,]
gofstat(fit.beta, fitnames = c("beta"))[2,]
gofstat(fit.beta, fitnames = c("beta"))[2]
gofstat(fit.beta, fitnames = c("beta"))[1]
gofstat(fit.beta, fitnames = c("beta"))[3]
gofstat(fit.beta, fitnames = c("beta"))
res <- rescale(df$V1)
res
res <- rescale(df$V1)
res
res <- rescale(df$V1)
res
fit.norm <- fitdist(df$V1, "norm", method = "mme")
fit.uniform <- fitdist(df$V1, "unif", method = "mme")
fit.beta <- fitdist(res, "beta", method = "mme")
gofstat(list(fit.norm, fit.weibull, fit.uniform), fitnames = c("normal", "weibull", "uniform"))
gofstat(fit.beta, fitnames = c("beta"))
gofstat(list(fit.norm, fit.weibull, fit.uniform), fitnames = c("normal", "uniform"))
gofstat(fit.beta, fitnames = c("beta"))
gofstat(list(fit.norm, fit.uniform), fitnames = c("normal", "uniform"))
gofstat(fit.beta, fitnames = c("beta"))
stat_normal <- gofstat(list(fit.norm), fitnames = c("normal"))
stat_normal <- gofstat(fit.norm, fitnames = c("normal"))
stat_unif <- gofstat(fit.uniform, fitnames = c("uniform"))
stat_beta <- gofstat(fit.beta, fitnames = c("beta"))
stat_beta$chisqtable
stat_beta$cvm
stat_beta$cvmtest
stat_normal$cvm
stat_normal$cvmtest
stat_normal
stat_unif
stat_beta
stat_table <- cbind(rbind(stat_normal$ks, stat_normal$cvm),
rbind(stat_unif$ks, stat_unif$cvm),
rbind(stat_beta$ks, stat_beta$cvm))
stat_table
rownames(stat_table) <- c("Kolmogorov-Smirnov statistic", "Cramer-von Mises statistic")
stat_table
stat_normal <- gofstat(fit.norm, fitnames = c("normal"))
stat_unif <- gofstat(fit.uniform, fitnames = c("uniform"))
stat_beta <- gofstat(fit.beta, fitnames = c("beta"))
stat_table <- cbind(rbind(stat_normal$ks, stat_normal$cvm),
rbind(stat_unif$ks, stat_unif$cvm),
rbind(stat_beta$ks, stat_beta$cvm))
rownames(stat_table) <- c("Kolmogorov-Smirnov statistic", "Cramer-von Mises statistic")
stat_table
stat_normal <- gofstat(fit.norm, fitnames = c("normal"))
stat_unif <- gofstat(fit.uniform, fitnames = c("uniform"))
stat_beta <- gofstat(fit.beta, fitnames = c("beta"))
stat_table <- cbind(rbind(stat_normal$ks, stat_normal$cvm),
rbind(stat_unif$ks, stat_unif$cvm),
rbind(stat_beta$ks, stat_beta$cvm))
rownames(stat_table) <- c("Kolmogorov-Smirnov statistic", "Cramer-von Mises statistic")
stat_table
stat_normal <- gofstat(fit.norm,
fitnames = c("normal"))
stat_unif <- gofstat(fit.uniform,
fitnames = c("uniform"))
stat_beta <- gofstat(fit.beta,
fitnames = c("beta"))
stat_table <- cbind(rbind(stat_normal$ks, stat_normal$cvm),
rbind(stat_unif$ks, stat_unif$cvm),
rbind(stat_beta$ks, stat_beta$cvm))
rownames(stat_table) <- c("Kolmogorov-Smirnov statistic", "Cramer-von Mises statistic")
stat_table
stat_normal <- gofstat(fit.norm,
fitnames = c("normal"))
stat_unif <- gofstat(fit.uniform,
fitnames = c("uniform"))
stat_beta <- gofstat(fit.beta,
fitnames = c("beta"))
stat_table <- cbind(rbind(stat_normal$ks, stat_normal$cvm),
rbind(stat_unif$ks, stat_unif$cvm),
rbind(stat_beta$ks, stat_beta$cvm))
rownames(stat_table) <- c("Kolmogorov-Smirnov statistic",
"Cramer-von Mises statistic")
stat_table
quantile(fit.norm, probs = 0.05)
quantile(fit.beta, probs = 0.05)
quantile(fit.uniform, probs = 0.05)
plot(fit.norm)
fit.norm <- fitdist(df$V1, "norm", method = "mme", breks = seq(min_el, max_el, by = bin_width))
plot(fit.norm)
fit.norm <- fitdist(df$V1, "norm", method = "mme", breaks = seq(min_el, max_el, by = bin_width))
plot(fit.norm)
fit.norm <- fitdist(df$V1, "norm", method = "mme",
breaks = seq(min_el, max_el, by = bin_width))
fit.norm <- fitdist(df$V1, "norm", method = "mme",
breaks = seq(min_el, max_el, by = bin_width))
plot(fit.norm)
plot(fit.weibull)
plot(fit.uniform)
fit.norm <- fitdist(df$V1, "norm", method = "mme")
plot(fit.norm)
plot(fit.uniform)
plot(fit.beta)
png(filename = c("../img/fit_norm.png",
"../img/fit_unif.png",
"../img/fit_beta.png" ),
width = 1920, height = 1080,
pointsize = 24, res = 96 * 1.25)
plot(fit.norm)
plot(fit.uniform)
plot(fit.beta)
dev.off()
png(filename = c("../img/fit_norm.png",
"../img/fit_unif.png",
"../img/fit_beta.png" ),
width = 1920, height = 1080,
pointsize = 24, res = 96 * 1.25)
plot(fit.norm)
plot(fit.uniform)
plot(fit.beta)
dev.off()
png(filename = "../img/fit_norm.png",
width = 1920, height = 1080,
pointsize = 24, res = 96 * 1.25)
plot(fit.norm)
dev.off()
png(filename = "../img/fit_norm.png",
width = 1920, height = 1080,
pointsize = 24, res = 96 * 1)
plot(fit.norm)
dev.off()
png(filename = "../img/fit_norm.png",
width = 1920, height = 1080,
pointsize = 24, res = 96 * 1)
plot(fit.norm)
dev.off()
png(filename = "../img/fit_unif.png",
width = 1920, height = 1080,
pointsize = 24, res = 96 * 1)
plot(fit.uniform)
dev.off()
png(filename = "../img/fit_beta.png",
width = 1920, height = 1080,
pointsize = 24, res = 96 * 1)
plot(fit.beta)
dev.off()
hist(df$V1,
breaks = seq(min_el, max_el, by = bin_width),
xlim = c(0, 20), ylim = c(0.00,0.10), axes = F, freq = F,
main = "Histogram of data")
axis(1, seq(0, 20, 1))
axis(2, seq(0.00, 0.10, 0.01), las = 1)
stat_normal$
#3
dunif(15)
curve(dunif(x, min = min_el, max = max_el))
curve(dunif(x, min = min_el, max = max_el), 0, 8)
curve(dunif(x, min = 17.9383, max = 2.5978), 0, 8)
curve(dunif(x, min = 2.5978, max = 17.9383), 0, 8)
curve(dunif(x, min = 2.5978, max = 17.9383))
curve(dunif(c(0,20), min = 2.5978, max = 17.9383))
curve(dunif(seq(0,20,0.01), min = 2.5978, max = 17.9383))
stat_normal$
#3
plot_range <- seq(0, 20, 0.01)
dens_unif_plot <- dunif(plot_range, 2.5978, 17.9383)
stat_normal$
#3
plot_range <- seq(0, 20, 0.01)
dens_unif_plot <- dunif(plot_range, 2.5978, 17.9383)
seq(0, 20, 0.01)
stat_normal$
#3
plot_range <- seq(0, 20, 0.01)
plot_range <- seq(0, 20, 0.01)
dens_unif_plot <- dunif(plot_range, 2.5978, 17.9383)
plot(plot_range, y, type = "l")
plot(plot_range, dens_unif_plot, type = "l")
curve(plot_range, dens_unif_plot, type = "l", add)
curve(plot_range, dens_unif_plot, type = "l")
curve(dens_unif_plot)
curve(dunif(plot_range, 2.5978, 17.9383))
curve(dunif(x, 2.5978, 17.9383))
curve(dunif(x, 2.5978, 17.9383), 2.5978, 17.9383)
curve(dunif(x, 2.5978, 17.9383), 2.5978, 17.9383, xlim = c(0,20))
curve(dunif(x, 2.5978, 17.9383), 2.5978, 17.9383, xlim = c(0,20), add = T)
curve(dunif(x, 2.5978, 17.9383), 2.5978, 17.9383, xlim = c(0,20), add = T, col = "red")
hist(df$V1,
breaks = seq(min_el, max_el, by = bin_width),
xlim = c(0, 20), ylim = c(0.00,0.10), axes = F, freq = F,
main = "Histogram of data")
par(mar = c(3, 3, 2, 1), xaxs = "i", yaxs = "i")
pl1 <- hist(df$V1,
breaks = seq(min_el, max_el, by = bin_width),
xlim = c(0, 20), ylim = c(0.00,0.10), axes = F, freq = F,
main = "Histogram of data")
axis(1, seq(0, 20, 1))
axis(2, seq(0.00, 0.10, 0.01), las = 1)
grid(nx = 20, ny = 10, equilogs = F)
curve(dunif(x, 2.5978, 17.9383), 2.5978, 17.9383, xlim = c(0,20), add = T, col = "red")
curve(dunif(x, 2.5978, 17.9383), 2.5978, 17.9383, xlim = c(0,20), add = T, col = "red", lwd = 3)
legend("topright", c("uniform density"),
lty=c(1), bty = "n",
fill=c("black"))
legend("topright", c("uniform density"),
lty=c(1),
fill=c("black"))
legend("topright", c("uniform density"),
lty=c(1),
fill=c("red"))
png(filename = "../img/hist_without_dens.png",
width = 1920, height = 1080,
pointsize = 24, res = 96 * 1.25)
par(mar = c(3, 3, 2, 1), xaxs = "i", yaxs = "i")
pl1 <- hist(df$V1,
breaks = seq(min_el, max_el, by = bin_width),
xlim = c(0, 20), ylim = c(0.00,0.10), axes = F, freq = F,
main = "Histogram of data")
axis(1, seq(0, 20, 1))
axis(2, seq(0.00, 0.10, 0.01), las = 1)
grid(nx = 20, ny = 10, equilogs = F)
curve(dunif(x, 2.5978, 17.9383), 2.5978, 17.9383,
xlim = c(0,20), add = T, col = "red", lwd = 3)
legend("topright", c("uniform density"),
lty=c(1),
fill=c("red"))
dev.off()
png(filename = "../img/hist_without_dens.png",
width = 1920, height = 1080,
pointsize = 24, res = 96 * 1.25)
par(mar = c(3, 3, 2, 1), xaxs = "i", yaxs = "i")
pl1 <- hist(df$V1,
breaks = seq(min_el, max_el, by = bin_width),
xlim = c(0, 20), ylim = c(0.00,0.10), axes = F, freq = F,
main = "Histogram of data")
axis(1, seq(0, 20, 1))
axis(2, seq(0.00, 0.10, 0.01), las = 1)
grid(nx = 20, ny = 10, equilogs = F)
dev.off()
png(filename = "../img/hist_with_unif_dens.png",
width = 1920, height = 1080,
pointsize = 24, res = 96 * 1.25)
par(mar = c(3, 3, 2, 1), xaxs = "i", yaxs = "i")
pl1 <- hist(df$V1,
breaks = seq(min_el, max_el, by = bin_width),
xlim = c(0, 20), ylim = c(0.00,0.10), axes = F, freq = F,
main = "Histogram of data")
axis(1, seq(0, 20, 1))
axis(2, seq(0.00, 0.10, 0.01), las = 1)
grid(nx = 20, ny = 10, equilogs = F)
curve(dunif(x, 2.5978, 17.9383), 2.5978, 17.9383,
xlim = c(0,20), add = T, col = "red", lwd = 3)
legend("topright", c("uniform density"),
lty=c(1),
fill=c("red"))
dev.off()
plot(df$V1)
plot(df$V1, lty = "l")
plot(df$V1, lty = 1)
plot(df$V1, lty = 2)
df <- read.csv("db.csv", header = F) #data import
#############################################################################
#5
N <- length(df$V1)
x <- sort(df$V1)
#############################################################################
#5
n <- length(df$V1)
x <- sort(df$V1)
rval <- approxfun(vals, cumsum(tabulate(match(x, vals)))/n,
method = "constant", yleft = 0, yright = 1, f = 0,
ties = "ordered")
vals <- unique(x)
rval <- approxfun(vals, cumsum(tabulate(match(x, vals)))/n,
method = "constant", yleft = 0, yright = 1, f = 0,
ties = "ordered")
rval
n <- length(df$V1)
x <- sort(df$V1)
vals <- unique(x)
rval <- approxfun(vals, cumsum(tabulate(match(x, vals)))/n,
method = "constant", yleft = 0, yright = 1, f = 0,
ties = "ordered")
n <- length(df$V1)
x <- sort(df$V1)
vals <- unique(x)
rval <- approxfun(vals, cumsum(tabulate(match(x, vals)))/n,
method = "constant", yleft = 0, yright = 1, f = 0,
ties = "ordered")
rval <- approxfun(vals, cumsum(tabulate(match(x, vals)))/n,
method = "constant", yleft = 0, yright = 1, f = 0,
ties = "ordered")
n <- length(df$V1)
x <- sort(df$V1)
vals <- unique(x)
rval <- approxfun(vals,
cumsum(tabulate(match(x, vals)))/n,
method = "constant", yleft = 0, yright = 1, f = 0,
ties = "ordered")
par(mar = c(3, 3, 2, 1), xaxs = "i", yaxs = "i")
pl1 <- hist(df$V1,
breaks = seq(min_el, max_el, by = bin_width),
xlim = c(0, 20), ylim = c(0.00,0.10), axes = F, freq = F,
main = "Histogram of data")
axis(1, seq(0, 20, 1))
axis(2, seq(0.00, 0.10, 0.01), las = 1)
grid(nx = 20, ny = 10, equilogs = F)
plot(ecdf(x))
hist(ecdf(df$V1),
breaks = seq(min_el, max_el, by = bin_width),
xlim = c(0, 20), ylim = c(0.00,0.10), axes = F, freq = F,
main = "Histogram of data")
axis(1, seq(0, 20, 1))
axis(2, seq(0.00, 0.10, 0.01), las = 1)
grid(nx = 20, ny = 10, equilogs = F)
ecdf(x)
ecdf(pl1$counts)
plot(ecdf(pl1$counts))
plot(ecdf(pl1$breaks))
hist(df$V1,
breaks = seq(min_el, max_el, by = bin_width),
xlim = c(0, 20), ylim = c(0.00,0.10), axes = F, freq = F,
main = "Histogram of data")
axis(1, seq(0, 20, 1))
axis(2, seq(0.00, 0.10, 0.01), las = 1)
grid(nx = 20, ny = 10, equilogs = F)
plot(ecdf(pl1$breaks))
plot(ecdf(x))
lines (x, (1:n)/n, type = 's', col="blue")
plot(ecdf(x))
curve(punif(x, 2.5978, 17.9383), 2.5978, 17.9383,
xlim = c(0,20), add = T, col = "red", lwd = 3)
plot(ecdf(x), main = "Эмпирическая и теоретическая CDF")
lines (x, (1:n)/n, type = 's', col="blue")
curve(punif(x, 2.5978, 17.9383), 2.5978, 17.9383,
xlim = c(0,20), add = T, col = "red", lwd = 3)
legend("bottomright")
legend("bottomright", c("emperical CDF", "theoritical CDF"), lty = c("s", "l"))
plot(ecdf(x), main = "Empirical and theoritical distribution functions", lwd = 3)
plot(ecdf(x), main = "Empirical and theoritical distribution functions", lwd = 3, col = "lightblue")
lines (x, (1:n)/n, type = 's', col="blue", lwd = 2)
plot(ecdf(x), main = "Empirical and theoritical distribution functions", lwd = 3, col = "lightgreen")
lines (x, (1:n)/n, type = 's', col="blue", lwd = 2)
curve(punif(x, 2.5978, 17.9383), 2.5978, 17.9383,
xlim = c(0,20), add = T, col = "red", lwd = 3)
View(rval)
rval(x)
plot(rval(x))
png(filename = "../img/emp_and_theor_CDF.png",
width = 1920, height = 1080,
pointsize = 24, res = 96 * 1.25)
plot(ecdf(x), main = "Empirical and theoritical distribution functions", lwd = 3, col = "lightgreen")
lines (x, (1:n)/n, type = 's', col="blue", lwd = 2)
curve(punif(x, 2.5978, 17.9383), 2.5978, 17.9383,
xlim = c(0,20), add = T, col = "red", lwd = 3)
legend("bottomright", c("emperical CDF", "theoritical CDF"), lty = c("3", "1"), )
dev.off()
png(filename = "../img/emp_and_theor_CDF.png",
width = 1920, height = 1080,
pointsize = 24, res = 96 * 1.25)
plot(ecdf(x), main = "Empirical and theoritical distribution functions", lwd = 3, col = "lightgreen")
lines (x, (1:n)/n, type = 's', col="blue", lwd = 2)
curve(punif(x, 2.5978, 17.9383), 2.5978, 17.9383,
xlim = c(0,20), add = T, col = "red", lwd = 3)
legend("bottomright", c("emperical CDF", "theoritical CDF"), lty = c("3", "1"), col = c("blue", "red"))
dev.off()
png(filename = "../img/emp_and_theor_CDF.png",
width = 1920, height = 1080,
pointsize = 24, res = 96 * 1.25)
plot(ecdf(x), main = "Empirical and theoritical distribution functions", lwd = 3, col = "lightgreen")
lines (x, (1:n)/n, type = 's', col="blue", lwd = 2)
curve(punif(x, 2.5978, 17.9383), 2.5978, 17.9383,
xlim = c(0,20), add = T, col = "red", lwd = 3)
legend("bottomright", c("emperical CDF", "theoritical CDF"), lty = c("2", "1"), col = c("blue", "red"))
dev.off()
plot(ecdf(x), main = "Empirical and theoritical distribution functions", lwd = 3, col = "lightgreen")
lines (x, (1:n)/n, type = 's', col="blue", lwd = 2)
curve(punif(x, 2.5978, 17.9383), 2.5978, 17.9383,
xlim = c(0,20), add = T, col = "red", lwd = 3)
legend("bottomright", c("emperical CDF", "theoritical CDF"), lty = c("2", "1"), col = c("blue", "red"))
legend("bottomright", c("emperical CDF", "theoritical CDF"), lty = c("1", "2"), col = c("blue", "red"))
legend("bottomright", c("emperical CDF", "theoritical CDF"), lty = c("2", "2"), col = c("blue", "red"))
legend("bottomright", c("emperical CDF", "theoritical CDF"), lty = c("2", "1", "3"), col = c("blue", "red"))
legend("topright", c("emperical CDF", "theoritical CDF"), lty = c("2", "1"), col = c("blue", "red"))
plot(ecdf(x), main = "Empirical and theoritical distribution functions", lwd = 3, col = "lightgreen")
lines (x, (1:n)/n, type = 's', col="blue", lwd = 2)
curve(punif(x, 2.5978, 17.9383), 2.5978, 17.9383,
xlim = c(0,20), add = T, col = "red", lwd = 3)
legend("topright", c("emperical CDF", "theoritical CDF"), lty = c(2,1), col = c("blue", "red"))
legend("topright", c("emperical CDF", "theoritical CDF"), lty = 1, col = c("blue", "red"))
png(filename = "../img/emp_and_theor_CDF.png",
width = 1920, height = 1080,
pointsize = 24, res = 96 * 1.25)
plot(ecdf(x), main = "Empirical and theoritical distribution functions", lwd = 3, col = "lightgreen")
lines (x, (1:n)/n, type = 's', col="blue", lwd = 2)
curve(punif(x, 2.5978, 17.9383), 2.5978, 17.9383,
xlim = c(0,20), add = T, col = "red", lwd = 3)
legend("bottomright", c("emperical CDF", "theoritical CDF"), lty = 1, col = c("blue", "red"))
dev.off()
plot(ecdf(x), main = "Empirical and theoritical distribution functions", lwd = 3, col = "lightgreen")
lines (x, (1:n)/n, type = 's', col="blue", lwd = 2)
curve(punif(x, 2.5978, 17.9383), 2.5978, 17.9383,
xlim = c(0,20), add = T, col = "red", lwd = 3)
legend("bottomright", c("emperical CDF", "theoritical CDF"), lty = 1, col = c("blue", "red"))
png(filename = "../img/emp_and_theor_CDF.png",
width = 1920, height = 1080,
pointsize = 24, res = 96 * 1.25)
plot(ecdf(x),
main = "Empirical and theoritical distribution functions",
lwd = 3, col = "lightgreen")
lines (x, (1:n)/n, type = 's',
col="blue", lwd = 2)
curve(punif(x, 2.5978, 17.9383), 2.5978, 17.9383,
xlim = c(0,20), add = T,
col = "red", lwd = 3)
legend("bottomright",
c("emperical CDF", "theoritical CDF"),
lty = 1, col = c("blue", "red"))
dev.off()
axis(1, seq(0, 20, 1))
png(filename = "../img/emp_and_theor_CDF.png",
width = 1920, height = 1080,
pointsize = 24, res = 96 * 1.25)
plot(ecdf(x),
main = "Empirical and theoritical distribution functions",
lwd = 3, col = "lightgreen")
lines (x, (1:n)/n, type = 's',
col="blue", lwd = 2)
curve(punif(x, 2.5978, 17.9383), 2.5978, 17.9383,
xlim = c(0,20), add = T,
col = "red", lwd = 3)
legend("bottomright",
c("emperical CDF", "theoritical CDF"),
lty = 1, col = c("blue", "red"))
axis(1, seq(0, 20, 1))
dev.off()
png(filename = "../img/emp_and_theor_CDF.png",
width = 1920, height = 1080,
pointsize = 24, res = 96 * 1.25)
plot(ecdf(x),
main = "Empirical and theoritical distribution functions",
lwd = 3, col = "lightgreen",
xlab = "", ylab = "")
lines (x, (1:n)/n, type = 's',
col="blue", lwd = 2)
curve(punif(x, 2.5978, 17.9383), 2.5978, 17.9383,
xlim = c(0,20), add = T,
col = "red", lwd = 3)
legend("bottomright",
c("emperical CDF", "theoritical CDF"),
lty = 1, col = c("blue", "red"))
axis(1, seq(0, 20, 1))
dev.off()
plot(ecdf(x),
main = "Empirical and theoritical distribution functions",
lwd = 3, col = "lightgreen",
xlab = "", ylab = "")
lines (x, (1:n)/n, type = 's',
col="blue", lwd = 2)
curve(punif(x, 2.5978, 17.9383), 2.5978, 17.9383,
xlim = c(0,20), add = T,
col = "red", lwd = 3)
legend("bottomright",
c("emperical CDF", "theoritical CDF"),
lty = 1, col = c("blue", "red"))
axis(1, seq(0, 20, 1))
length(df)
