plot(ecdf(x),
main = "Empirical and theoritical distribution functions",
lwd = 1, col = "green",
xlab = "", ylab = "")
lines (x, (1:n)/n, type = 's',
col="green", lwd = 2)
curve(pgamma(x, shape=5.242, scale=1/0.523), 25, 1,
xlim = c(0,20), add = T,
col = "red", lwd = 3)
axis(1, seq(0, 20, 1))
plot(ecdf(x),
main = "Empirical and theoritical distribution functions",
lwd = 2, col = "green",
xlab = "", ylab = "")
lines (x, (1:n)/n, type = 's',
col="green", lwd = 2)
curve(pgamma(x, shape=5.242, scale=1/0.523), 25, 1,
xlim = c(0,20), add = T,
col = "red", lwd = 3)
axis(1, seq(0, 20, 1))
png(filename = "../img/emp_and_theor_CDF_gamma.png",
width = 1920, height = 1080,
pointsize = 24, res = 96 * 1.25)
plot(ecdf(x),
main = "Empirical and theoritical distribution functions",
lwd = 2, col = "green",
xlab = "", ylab = "")
lines (x, (1:n)/n, type = 's',
col="green", lwd = 2)
curve(pgamma(x, shape=5.242, scale=1/0.523), 25, 1,
xlim = c(0,20), add = T,
col = "red", lwd = 3)
axis(1, seq(0, 20, 1))
dev.off()
plot(ecdf(x),
main = "Empirical and theoritical distribution functions",
lwd = 2, col = "green",
xlab = "", ylab = "")
lines (x, (1:n)/n, type = 's',
col="green", lwd = 2)
curve(pgamma(x, shape=5.242, scale=1/0.523), 25, 1,
xlim = c(0,25), add = T,
col = "red", lwd = 3)
axis(1, seq(0, 25, 1))
plot(ecdf(x),
main = "Empirical and theoritical distribution functions",
lwd = 2, col = "green",
xlab = "", ylab = "")
lines (x, (1:n)/n, type = 's',
col="green", lwd = 2)
curve(pchisq(x, df=10.02202), 25, 1,
xlim = c(0,20), add = T,
col = "blue", lwd = 3)
axis(1, seq(0, 25, 1))
png(filename = "../img/emp_and_theor_CDF_chisq.png",
width = 1920, height = 1080,
pointsize = 24, res = 96 * 1.25)
plot(ecdf(x),
main = "Empirical and theoritical distribution functions",
lwd = 2, col = "green",
xlab = "", ylab = "")
lines (x, (1:n)/n, type = 's',
col="green", lwd = 2)
curve(pchisq(x, df=10.02202), 25, 1,
xlim = c(0,20), add = T,
col = "blue", lwd = 3)
axis(1, seq(0, 25, 1))
dev.off()
plot(ecdf(x),
main = "Empirical and theoritical distribution functions",
lwd = 2, col = "green",
xlab = "", ylab = "")
lines (x, (1:n)/n, type = 's',
col="green", lwd = 2)
curve(pgamma(x, shape=5.242, scale=1/0.523), 25, 1,
xlim = c(0,25), add = T,
col = "red", lwd = 3)
axis(1, seq(0, 25, 1))
png(filename = "../img/emp_and_theor_CDF_chisq.png",
width = 1920, height = 1080,
pointsize = 24, res = 96 * 1.25)
plot(ecdf(x),
main = "Empirical and theoritical CDF for the Chisq density",
lwd = 2, col = "green",
xlab = "", ylab = "")
lines (x, (1:n)/n, type = 's',
col="green", lwd = 2)
curve(pchisq(x, df=10.02202), 25, 1,
xlim = c(0,20), add = T,
col = "blue", lwd = 3)
axis(1, seq(0, 25, 1))
dev.off()
png(filename = "../img/emp_and_theor_CDF_gamma.png",
width = 1920, height = 1080,
pointsize = 24, res = 96 * 1.25)
plot(ecdf(x),
main = "Empirical and theoritical CDF for the Gamma density",
lwd = 2, col = "green",
xlab = "", ylab = "")
lines (x, (1:n)/n, type = 's',
col="green", lwd = 2)
curve(pgamma(x, shape=5.242, scale=1/0.523), 25, 1,
xlim = c(0,25), add = T,
col = "red", lwd = 3)
axis(1, seq(0, 25, 1))
dev.off()
plot(ecdf(x),
main = "Empirical and theoritical CDF for the Chisq density",
lwd = 2, col = "green",
xlab = "", ylab = "")
lines (x, (1:n)/n, type = 's',
col="green", lwd = 2)
curve(pgamma(x, shape=5.242, scale=1/0.523), 25, 1,
xlim = c(0,25), add = T,
col = "red", lwd = 3)
curve(pchisq(x, df=10.02202), 25, 1,
xlim = c(0,20), add = T,
col = "blue", lwd = 3)
axis(1, seq(0, 25, 1))
plot(ecdf(x),
main = "Empirical and theoritical CDF for the Gamma and Chisq density",
lwd = 2, col = "green",
xlab = "", ylab = "")
lines (x, (1:n)/n, type = 's',
col="green", lwd = 2)
curve(pgamma(x, shape=5.242, scale=1/0.523), 25, 1,
xlim = c(0,25), add = T,
col = "red", lwd = 3)
curve(pchisq(x, df=10.02202), 25, 1,
xlim = c(0,20), add = T,
col = "blue", lwd = 3)
axis(1, seq(0, 25, 1))
png(filename = "../img/emp_and_theor_CDF_chisq.png",
width = 1920, height = 1080,
pointsize = 24, res = 96 * 1.25)
plot(ecdf(x),
main = "Empirical and theoritical CDF for the Gamma and Chisq density",
lwd = 2, col = "green",
xlab = "", ylab = "")
lines (x, (1:n)/n, type = 's',
col="green", lwd = 2)
curve(pgamma(x, shape=5.242, scale=1/0.523), 25, 1,
xlim = c(0,25), add = T,
col = "red", lwd = 3)
curve(pchisq(x, df=10.02202), 25, 1,
xlim = c(0,20), add = T,
col = "blue", lwd = 3)
axis(1, seq(0, 25, 1))
dev.off()
png(filename = "../img/emp_and_theor_CDF_gamma_chisq.png",
width = 1920, height = 1080,
pointsize = 24, res = 96 * 1.25)
plot(ecdf(x),
main = "Empirical and theoritical CDF for the Gamma and Chisq density",
lwd = 2, col = "green",
xlab = "", ylab = "")
lines (x, (1:n)/n, type = 's',
col="green", lwd = 2)
curve(pgamma(x, shape=5.242, scale=1/0.523), 25, 1,
xlim = c(0,25), add = T,
col = "red", lwd = 3)
curve(pchisq(x, df=10.02202), 25, 1,
xlim = c(0,20), add = T,
col = "blue", lwd = 3)
axis(1, seq(0, 25, 1))
dev.off()
file
file <- read.csv("doc.csv", header = F) #импорт данных
View(file)
View(df)
View(fail)
file <- read.csv("doc.csv", header = F) #импорт данных
View(file)
####################################################
#1
max_element <- max(file) #максимальный элемент выборки
max_element
####################################################
#1
max_element <- max(file) #максимальный элемент выборки
max_element
min_element <- min(file) #минимальный элемент выборки
min_element
w <- max_element - min_element #размах выборки
w
n <- length(df$V1) #количество данных
n
n <- length(df$V1) #количество данных
n <- length(file$V1) #количество данных
n
#####################################################
#2
numofint = round(1 + log2(length(file$V1))) #число интервалов по правилу Стерджесса
numofint
width<- w / numofint # ширина интервала
width
width
png(filename = "../img/Histogram.png", #построение гистограммы
width = 1920, height = 1080,
pointsize = 24, res = 96 * 1.25)
paramentrs(mar = c(3, 3, 2, 1), xaxs = "i", yaxs = "i")
plot1 <- hist(file$V1, col="gray70",
breaks = seq(min_element, max_element, by = width),
xlim = c(0, 25), ylim = c(0.00,0.12), axes = F, freq = F,
main = "Histogram")
axis(1, seq(0, 25, 1))
axis(2, seq(0.00, 0.12, 0.01), las = 1)
dev.off()
f<-cbind(plot1$breaks[-length(plot1$breaks)],plot1$counts) # f
f
p <- plot1$counts / length(file$V1) # p=f[2]/n
p
sum(p)
f1<-p/w #f1
f1
####################################################
#4
mean_element <- mean(file$V1) #выборочное среднее
mean_element
variance_element <- var(file$V1) #выборочная дисперсия
variance_element
png(filename = "../img/hist_with_gamma_and_chisq_dens.png",
width = 1920, height = 1080,
pointsize = 24, res = 96 * 1.25)
par(mar = c(3, 3, 2, 1), xaxs = "i", yaxs = "i")
plot1 <- hist(file$V1, col="gray70",
breaks = seq(min_element, max_element, by = width),
xlim = c(0, 25), ylim = c(0.00,0.12), axes = F, freq = F,
main = "Histogram with Gamma density")
axis(1, seq(0, 25, 1))
axis(2, seq(0.00, 0.12, 0.01), las = 1)
curve(dgamma(x, shape=5.242, scale=1/0.523 ), 0.12, 25,
xlim = c(0,20), add = T, col = "red", lwd = 3)
curve(dchisq(x, df=10.02202 ), 0.15, 25,
xlim = c(0,20), add = T, col = "blue", lwd = 3)
dev.off()
png(filename = "../img/hist_with_gamma_and_chisq_dens.png",
width = 1920, height = 1080,
pointsize = 24, res = 96 * 1.25)
par(mar = c(3, 3, 2, 1), xaxs = "i", yaxs = "i")
plot1 <- hist(file$V1, col="gray70",
breaks = seq(min_element, max_element, by = width),
xlim = c(0, 25), ylim = c(0.00,0.12), axes = F, freq = F,
main = "Histogram with Gamma and Chisq density")
axis(1, seq(0, 25, 1))
axis(2, seq(0.00, 0.12, 0.01), las = 1)
curve(dgamma(x, shape=5.242, scale=1/0.523 ), 0.12, 25,
xlim = c(0,20), add = T, col = "red", lwd = 3)
curve(dchisq(x, df=10.02202 ), 0.15, 25,
xlim = c(0,20), add = T, col = "blue", lwd = 3)
dev.off()
file
#####################################################
#####################################################
plot1$density
#####################################################
#####################################################
sum(lot1$density)
#####################################################
#####################################################
sum(plot1$density)
#####################################################
#####################################################
cumsum(plot1$density)
plot1 <- hist(file$V1, col="gray70",
breaks = seq(min_element, max_element, by = width),
xlim = c(0, 25), ylim = c(0.00,0.12), axes = F, freq = F,
main = "Histogram")
plot1$counts
paramentrs(mar = c(3, 3, 2, 1), xaxs = "i", yaxs = "i")
plot1 <- hist(file$V1, col="gray70",
breaks = seq(min_element, max_element, by = width),
xlim = c(0, 25), ylim = c(0.00,0.12), axes = F, freq = F,
main = "Histogram")
axis(1, seq(0, 25, 1))
axis(2, seq(0.00, 0.12, 0.01), las = 1)
plot1$density
#####################################################
#####################################################
relative_freq <- pl1$counts / length(df$V1)
relative_freq
#####################################################
#####################################################
relative_freq <- plot1$counts / length(df$V1)
relative_freq
#####################################################
#####################################################
relative_freq <- plot1$counts / length(file$V1)
relative_freq
sum(relative_freq)
plot1$breaks -width/2
plot1
plot1
hist(file$V1, col="gray70",
breaks = seq(min_element, max_element, by = width),
xlim = c(0, 25), ylim = c(0.00,0.12), axes = F, freq = F,
main = "Histogram")
paramentrs(mar = c(3, 3, 2, 1), xaxs = "i", yaxs = "i")
plot1 <- hist(file$V1, col="gray70",
breaks = seq(min_element, max_element, by = width),
xlim = c(0, 25), ylim = c(0.00,0.12), axes = F, freq = F,
main = "Histogram")
axis(1, seq(0, 25, 1))
axis(2, seq(0.00, 0.12, 0.01), las = 1)
relative_freq/width
plot1$density
plot1$mids - width/2
plot1$breaks
plot1$breaks[-1]
plot1$breaks[-length(plot1$breaks)]
pchisq(plot1$breaks[-1], mean_element) - pchisq(plot1$breaks[-length(plot1$breaks)], mean_element)
sum(pchisq(plot1$breaks[-1], mean_element) - pchisq(plot1$breaks[-length(plot1$breaks)], mean_element))
plot1$breaks
pchisq(plot1$breaks[2])
pchisq(plot1$breaks[2], mean_element)
hist(file$V1, col="gray70",
breaks = seq(min_element, max_element, by = width),
xlim = c(0, 25), ylim = c(0.00,0.12), freq = F,
main = "Histogram")
axis(1, seq(0, 25, 1))
plot1$breaks
plot1$mids - width/2
pchisq(plot1$breaks[-1], mean_element) - pchisq(plot1$breaks[-length(plot1$breaks)], mean_element)
plot1$breaks[-1]
plot1$breaks
p1 <- pchisq(plot1$breaks[3], mean_element) - pchisq(plot1$breaks[2], mean_element)
p2 <- pchisq(plot1$breaks[4], mean_element) - pchisq(plot1$breaks[3], mean_element)
p3 <- pchisq(plot1$breaks[5], mean_element) - pchisq(plot1$breaks[4], mean_element)
p4 <- pchisq(plot1$breaks[6], mean_element) - pchisq(plot1$breaks[5], mean_element)
p5 <- pchisq(plot1$breaks[7], mean_element) - pchisq(plot1$breaks[8], mean_element)
p6 <- pchisq(plot1$breaks[8], mean_element) - pchisq(plot1$breaks[7], mean_element)
p1 <- pchisq(plot1$breaks[2], mean_element)
p2 <- pchisq(plot1$breaks[3], mean_element) - pchisq(plot1$breaks[2], mean_element)
p3 <- pchisq(plot1$breaks[4], mean_element) - pchisq(plot1$breaks[3], mean_element)
p4 <- pchisq(plot1$breaks[5], mean_element) - pchisq(plot1$breaks[4], mean_element)
p5 <- pchisq(plot1$breaks[6], mean_element) - pchisq(plot1$breaks[5], mean_element)
p6 <- pchisq(plot1$breaks[7], mean_element) - pchisq(plot1$breaks[8], mean_element)
p7 <- pchisq(plot1$breaks[8], mean_element) - pchisq(plot1$breaks[7], mean_element)
p8 <- 1 - p1 - p2 - p3 - p4 - p5 - p6 - p7
p8
p1+p2+p3+p4+p5+p6+p7+p8
pt <- c(p1,p2,p3,p4,p5,p6,p7,p8)
npt <- pt * n
npt
sym(npt)
sum(npt)
p4 <- pchisq(plot1$breaks[5], mean_element) - pchisq(plot1$breaks[4], mean_element)
p5 <- pchisq(plot1$breaks[6], mean_element) - pchisq(plot1$breaks[5], mean_element)
p6 <- pchisq(plot1$breaks[7], mean_element) - pchisq(plot1$breaks[6], mean_element)
p7 <- pchisq(plot1$breaks[8], mean_element) - pchisq(plot1$breaks[7], mean_element)
p8 <- 1 - p1 - p2 - p3 - p4 - p5 - p6 - p7
p1+p2+p3+p4+p5+p6+p7+p8
pt <- c(p1,p2,p3,p4,p5,p6,p7,p8)
npt <- pt * n
sum(npt)
npt
pt[-(7:8)]
relative_freq[-c(7:8)]
chi_sq <- sum((pt[-(7:8)] - relative_freq[-c(7:8)])^2/(pt[-(7:8)]) +
(pt7 + pt8 - relative_freq[7] - relative_freq[8])^2 / (pt7 + pt8))
chi_sq <- sum((pt[-(7:8)] - relative_freq[-c(7:8)])^2/(pt[-(7:8)]) +
(p7 + p8 - relative_freq[7] - relative_freq[8])^2 / (p7 + p8))
chi_sq
qchisq(0.95,5)
chisq.test(file)
par(mar = c(3, 3, 2, 1), xaxs = "i", yaxs = "i")
plot1 <- hist(file$V1, col="gray70",
breaks = seq(min_element, max_element, by = width),
xlim = c(0, 25), ylim = c(0.00,0.12), axes = F, freq = F,
main = "Histogram with Chisq density")
axis(1, seq(0, 25, 1))
axis(2, seq(0.00, 0.12, 0.01), las = 1)
curve(dchisq(x, df=10.02202 ), 0.15, 25,
xlim = c(0,20), add = T, col = "blue", lwd = 3)
par(mar = c(3, 3, 2, 1), xaxs = "i", yaxs = "i")
plot1 <- hist(file$V1, col="gray70",
breaks = seq(min_element, max_element, by = width),
xlim = c(0, 25), ylim = c(0.00,0.12), axes = F, freq = F,
main = "Histogram with Chisq density")
axis(1, seq(0, 25, 1))
axis(2, seq(0.00, 0.12, 0.01), las = 1)
curve(dchisq(x, df=10), 0.15, 25,
xlim = c(0,20), add = T, col = "blue", lwd = 3)
par(mar = c(3, 3, 2, 1), xaxs = "i", yaxs = "i")
plot1 <- hist(file$V1, col="gray70",
breaks = seq(min_element, max_element, by = width),
xlim = c(0, 25), ylim = c(0.00,0.12), axes = F, freq = F,
main = "Histogram with Chisq density")
axis(1, seq(0, 25, 1))
axis(2, seq(0.00, 0.12, 0.01), las = 1)
curve(dchisq(x, df=10), 0.15, 25,
xlim = c(0,20), add = T, col = "blue", lwd = 3)
#####################################################
#2
numofint = floor(1 + log2(length(file$V1))) #?????????? ???????????????????? ???? ?????????????? ????????????????????
numofint
width<- w / numofint # ???????????? ??????????????????
width
par(mar = c(3, 3, 2, 1), xaxs = "i", yaxs = "i")
plot1 <- hist(file$V1, col="gray70",
breaks = seq(min_element, max_element, by = width),
xlim = c(0, 25), ylim = c(0.00,0.12), axes = F, freq = F,
main = "Histogram with Chisq density")
axis(1, seq(0, 25, 1))
axis(2, seq(0.00, 0.12, 0.01), las = 1)
curve(dchisq(x, df=10), 0.15, 25,
xlim = c(0,20), add = T, col = "blue", lwd = 3)
npt
pt
pchisq(plot1$breaks[-2], mean_element) - pchisq(plot1$breaks[-length(plot1$breaks)], mean_element)
pchisq(plot1$breaks[-1], mean_element) - pchisq(plot1$breaks[-length(plot1$breaks)], mean_element)
plot1$breaks[-c(length(plot1$breaks)-1:length(plot1$breaks))]
plot1$breaks[-c(length((plot1$breaks)-1):length(plot1$breaks))]
plot1$breaks
length(plot1$breaks)
length((plot1$breaks)-1)
length(plot1$breaks))
length(plot1$breaks)
length((plot1$breaks)-2)
plot1$breaks[-c(length((plot1$breaks))-1:length(plot1$breaks))]
length((plot1$breaks))-1
plot1$breaks[-c(7:8)]
length((plot1$breaks))
length((plot1$breaks))-1
plot1$breaks[-c((length((plot1$breaks))-1):length((plot1$breaks)))]
pchisq(plot1$breaks[-2], mean_element) - pchisq(plot1$breaks[-c((length((plot1$breaks))-1):length((plot1$breaks)))], mean_element)
plot1$breaks[-2]
pchisq(plot1$breaks[-c(1:2)], mean_element) - pchisq(plot1$breaks[-c((length((plot1$breaks))-1):length((plot1$breaks)))], mean_element)
pt
relative_freq/bin_width
pt
npt
plot1$counts[-c(7:8)]
plot1$counts
#####################################################
#2
numofint = round(1 + log2(length(file$V1))) #?????????? ???????????????????? ???? ?????????????? ????????????????????
numofint
width<- w / numofint # ???????????? ??????????????????
width
#####################################################
#####################################################
relative_freq <- plot1$counts / length(file$V1) #
relative_freq
#####################################################
#####################################################
relative_freq <- plot1$counts / length(file$V1) #
relative_freq
relative_freq/width
plot1$density
plot1$breaks
plot1$mids - width/2
plot1$breaks
p1 <- pchisq(plot1$breaks[2], mean_element)
p2 <- pchisq(plot1$breaks[3], mean_element) - pchisq(plot1$breaks[2], mean_element)
p3 <- pchisq(plot1$breaks[4], mean_element) - pchisq(plot1$breaks[3], mean_element)
p4 <- pchisq(plot1$breaks[5], mean_element) - pchisq(plot1$breaks[4], mean_element)
p5 <- pchisq(plot1$breaks[6], mean_element) - pchisq(plot1$breaks[5], mean_element)
p6 <- pchisq(plot1$breaks[7], mean_element) - pchisq(plot1$breaks[6], mean_element)
p7 <- pchisq(plot1$breaks[8], mean_element) - pchisq(plot1$breaks[7], mean_element)
p8 <- 1 - p1 - p2 - p3 - p4 - p5 - p6 - p7
p1+p2+p3+p4+p5+p6+p7+p8
pt <- c(p1,p2,p3,p4,p5,p6,p7,p8)
npt <- pt * n
plot1$counts[-c(7:8)]
file <- read.csv("doc.csv", header = F) #???????????? ????????????
####################################################
#1
max_element <- max(file) #???????????????????????? ?????????????? ??????????????
max_element
min_element <- min(file) #?????????????????????? ?????????????? ??????????????
min_element
w <- max_element - min_element #???????????? ??????????????
w
sort(file$V1) #???????????????????? ?????????????? ???? ??????????????????????
n <- length(file$V1) #???????????????????? ????????????
n
#####################################################
#2
numofint = round(1 + log2(length(file$V1))) #?????????? ???????????????????? ???? ?????????????? ????????????????????
numofint
width<- w / numofint # ???????????? ??????????????????
width
#####################################################
#####################################################
relative_freq <- plot1$counts / length(file$V1) #
relative_freq
relative_freq/width
plot1$density
plot1$breaks
plot1$mids - width/2
plot1$breaks
p1 <- pchisq(plot1$breaks[2], mean_element)
p2 <- pchisq(plot1$breaks[3], mean_element) - pchisq(plot1$breaks[2], mean_element)
p3 <- pchisq(plot1$breaks[4], mean_element) - pchisq(plot1$breaks[3], mean_element)
p4 <- pchisq(plot1$breaks[5], mean_element) - pchisq(plot1$breaks[4], mean_element)
p5 <- pchisq(plot1$breaks[6], mean_element) - pchisq(plot1$breaks[5], mean_element)
p6 <- pchisq(plot1$breaks[7], mean_element) - pchisq(plot1$breaks[6], mean_element)
p7 <- pchisq(plot1$breaks[8], mean_element) - pchisq(plot1$breaks[7], mean_element)
p8 <- 1 - p1 - p2 - p3 - p4 - p5 - p6 - p7
p1+p2+p3+p4+p5+p6+p7+p8
pt <- c(p1,p2,p3,p4,p5,p6,p7,p8)
npt <- pt * n
plot1 <- hist(file$V1, col="gray70",
breaks = seq(min_element, max_element, by = width),
xlim = c(0, 25), ylim = c(0.00,0.12), axes = F, freq = F,
main = "Histogram with Chisq density")
plot1$counts[-c(7:8)]
chi_sq <- sum((npt[-(7:8)] - plot1$counts[-c(7:8)])^2/(npt[-(7:8)]) +
(npt[7] + npt[8] - plot1$counts[7] - plot1$counts[8])^2 / (npt[7] + npt[8]))
chi_sq
qchisq(0.95,5)
