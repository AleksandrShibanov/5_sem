y_c <- cut(df[,2], num_bins)
x_c
df[,1]
z <- table(x_c, y_c)
z
main_perspective1 <- hist3D(x = seq(from = floor(min(df[,1])), ceiling(max(df[,1])), length.out = 100),
y = seq(from = floor(min(df[,2])), ceiling(max(df[,2])), length.out = 100),
z=z, border="black", ticktype = "detailed", lighting=T,
bty = "g", phi = 30, theta = 40, lphi = 50)
nrow(z)
nrow(x)
nrow(x_c)
main_perspective1 <- hist3D(x = seq(from = floor(min(df[,1])), ceiling(max(df[,1])), length.out = nrow(z)),
y = seq(from = floor(min(df[,2])), ceiling(max(df[,2])), length.out = nrow(z)),
z=z, border="black", ticktype = "detailed", lighting=T,
bty = "g", phi = 30, theta = 40, lphi = 50)
main_perspective4 <- hist3D(x = seq(from = floor(min(df[,1])), ceiling(max(df[,1])), length.out = nrow(z)),
y = seq(from = floor(min(df[,2])), ceiling(max(df[,2])), length.out = nrow(z)),
z=z, border="black", ticktype = "detailed", lighting=T,
bty = "g", phi = 30, theta = 0, lphi = 50)
main_perspective4 <- hist3D(x = seq(from = floor(min(df[,1])), ceiling(max(df[,1])), length.out = nrow(z)),
y = seq(from = floor(min(df[,2])), ceiling(max(df[,2])), length.out = nrow(z)),
z=z, border="black", ticktype = "detailed", lighting=T,
bty = "g", phi = 0, theta = 0, lphi = 50)
hist3D(x = seq(from = floor(min(df[,1])), ceiling(max(df[,1])), length.out = nrow(z)),
y = seq(from = floor(min(df[,2])), ceiling(max(df[,2])), length.out = nrow(z)),
z=z, border="black", ticktype = "detailed", lighting=T,
bty = "g", phi = 0, theta = 90, lphi = 50)
hist3D(x = seq(from = min(df[,1]), max(df[,1]), length.out = nrow(z)),
y = seq(from = floor(min(df[,2])), ceiling(max(df[,2])), length.out = nrow(z)),
z=z, border="black", ticktype = "detailed", lighting=T,
bty = "g", phi = 0, theta = 90, lphi = 50)
hist3D(x = seq(from = min(df[,1]), max(df[,1]), length.out = nrow(z)),
y = seq(from = min(df[,2]), max(df[,2]), length.out = nrow(z)),
z=z, border="black", ticktype = "detailed", lighting=T,
bty = "g", phi = 0, theta = 90, lphi = 50)
hist3D(x = seq(from = min(df[,1]), max(df[,1]), length.out = nrow(z)),
y = seq(from = min(df[,2]), max(df[,2]), length.out = nrow(z)),
z=z, border="black", ticktype = "detailed", lighting=T,
bty = "g", phi = 0, theta = 180, lphi = 50)
hist3D(x = seq(from = min(df[,1]), max(df[,1]), length.out = nrow(z)),
y = seq(from = min(df[,2]), max(df[,2]), length.out = nrow(z)),
z=z, border="black", ticktype = "detailed", lighting=T,
bty = "g", phi = 0, theta = 180, lphi = 50, d = 0)
hist3D(x = seq(from = min(df[,1]), max(df[,1]), length.out = nrow(z)),
y = seq(from = min(df[,2]), max(df[,2]), length.out = nrow(z)),
z=z, border="black", ticktype = "detailed", lighting=T,
bty = "g", phi = 0, theta = 180, lphi = 50, d = 2)
hist3D(x = seq(from = min(df[,1]), max(df[,1]), length.out = nrow(z)),
y = seq(from = min(df[,2]), max(df[,2]), length.out = nrow(z)),
z=z, border="black", ticktype = "detailed", lighting=T,
bty = "g", phi = 0, theta = 180, lphi = 50, d = 20)
mean(df[,1])
mean(seq(from = min(df[,1]), max(df[,1]), length.out = nrow(z))
mean(seq(from = min(df[,1]), max(df[,1]), length.out = nrow(z)))
seq(from = min(df[,1]), max(df[,1]), length.out = nrow(z))
x_c <- cut(df[,1], num_bins+5)
y_c <- cut(df[,2], num_bins+5)
z <- table(x_c, y_c)
length(z)
main_perspective1 <- hist3D(x = seq(from = floor(min(df[,1])), ceiling(max(df[,1])), length.out = nrow(z)),
y = seq(from = floor(min(df[,2])), ceiling(max(df[,2])), length.out = nrow(z)),
z=z, border="black", ticktype = "detailed", lighting=T,
bty = "g", phi = 30, theta = 40, lphi = 50)
main_perspective2 <- hist3D(x = seq(from = floor(min(df[,1])), ceiling(max(df[,1])), length.out = nrow(z)),
y = seq(from = floor(min(df[,2])), ceiling(max(df[,2])), length.out = nrow(z)),
z=z, border="black", ticktype = "detailed", lighting=T,
bty = "g", phi = 30, theta = 80, lphi = 50)
main_perspective3 <- hist3D(x = seq(from = floor(min(df[,1])), ceiling(max(df[,1])), length.out = nrow(z)),
y = seq(from = floor(min(df[,2])), ceiling(max(df[,2])), length.out = nrow(z)),
z=z, border="black", ticktype = "detailed", lighting=T,
bty = "g", phi = 30, theta = 120, lphi = 50)
main_perspective4 <- hist3D(x = seq(from = floor(min(df[,1])), ceiling(max(df[,1])), length.out = nrow(z)),
y = seq(from = floor(min(df[,2])), ceiling(max(df[,2])), length.out = nrow(z)),
z=z, border="black", ticktype = "detailed", lighting=T,
bty = "g", phi = 30, theta = 160, lphi = 50)
hist3D(x = seq(from = floor(min(df[,1])), ceiling(max(df[,1])), length.out = nrow(z)),
y = seq(from = floor(min(df[,2])), ceiling(max(df[,2])), length.out = nrow(z)),
z=z, border="black", ticktype = "detailed", lighting=T,
bty = "g", phi = 0, theta = 0, lphi = 50)
hist3D(x = seq(from = min(df[,1]), max(df[,1]), length.out = nrow(z)),
y = seq(from = min(df[,2]), max(df[,2]), length.out = nrow(z)),
z=z, border="black", ticktype = "detailed", lighting=T,
bty = "g", phi = 0, theta = 180, lphi = 50, d = 20)
x_c <- cut(df[,1], num_bins+10)
y_c <- cut(df[,2], num_bins+10)
z <- table(x_c, y_c)
hist3D(x = seq(from = min(df[,1]), max(df[,1]), length.out = nrow(z)),
y = seq(from = min(df[,2]), max(df[,2]), length.out = nrow(z)),
z=z, border="black", ticktype = "detailed", lighting=T,
bty = "g", phi = 0, theta = 180, lphi = 50, d = 20)
df <- mvrnorm(14000,mu,Sigma, empirical = T)
num_bins <- length(hist(df[,2], breaks = "Sturges", freq = T)$breaks)
x_c <- cut(df[,1], num_bins)
y_c <- cut(df[,2], num_bins)
z <- table(x_c, y_c)
hist3D(x = seq(from = min(df[,1]), max(df[,1]), length.out = nrow(z)),
y = seq(from = min(df[,2]), max(df[,2]), length.out = nrow(z)),
z=z, border="black", ticktype = "detailed", lighting=T,
bty = "g", phi = 0, theta = 180, lphi = 50, d = 20)
main_perspective1 <- hist3D(x = seq(from = floor(min(df[,1])), ceiling(max(df[,1])), length.out = nrow(z)),
y = seq(from = floor(min(df[,2])), ceiling(max(df[,2])), length.out = nrow(z)),
z=z, border="black", ticktype = "detailed", lighting=T,
bty = "g", phi = 30, theta = 40, lphi = 50)
main_perspective2 <- hist3D(x = seq(from = floor(min(df[,1])), ceiling(max(df[,1])), length.out = nrow(z)),
y = seq(from = floor(min(df[,2])), ceiling(max(df[,2])), length.out = nrow(z)),
z=z, border="black", ticktype = "detailed", lighting=T,
bty = "g", phi = 30, theta = 80, lphi = 50)
main_perspective3 <- hist3D(x = seq(from = floor(min(df[,1])), ceiling(max(df[,1])), length.out = nrow(z)),
y = seq(from = floor(min(df[,2])), ceiling(max(df[,2])), length.out = nrow(z)),
z=z, border="black", ticktype = "detailed", lighting=T,
bty = "g", phi = 30, theta = 120, lphi = 50)
main_perspective4 <- hist3D(x = seq(from = floor(min(df[,1])), ceiling(max(df[,1])), length.out = nrow(z)),
y = seq(from = floor(min(df[,2])), ceiling(max(df[,2])), length.out = nrow(z)),
z=z, border="black", ticktype = "detailed", lighting=T,
bty = "g", phi = 30, theta = 160, lphi = 50)
hist3D(x = seq(from = floor(min(df[,1])), ceiling(max(df[,1])), length.out = nrow(z)),
y = seq(from = floor(min(df[,2])), ceiling(max(df[,2])), length.out = nrow(z)),
z=z, border="black", ticktype = "detailed", lighting=T,
bty = "g", phi = 0, theta = 0, lphi = 50)
hist3D(x = seq(from = min(df[,1]), max(df[,1]), length.out = nrow(z)),
y = seq(from = min(df[,2]), max(df[,2]), length.out = nrow(z)),
z=z, border="black", ticktype = "detailed", lighting=T,
bty = "g", phi = 0, theta = 180, lphi = 50, d = 20)
plot(df)
df <- mvrnorm(140,mu,Sigma, empirical = T)
num_bins <- length(hist(df[,2], breaks = "Sturges", freq = T)$breaks)
x_c <- cut(df[,1], num_bins)
y_c <- cut(df[,2], num_bins)
z <- table(x_c, y_c)
plot(df)
abline(lm(df[,2] ~ df[,1]))
#2#############
summary(lm(df[,2] ~ df[,1], as.data.frame(df)))
#2#############
summary(lm(df[,2] ~ df[,1]))
r <- Sigma[1,2] / (sqrt([1,1] * Sigma[2,2]))
r <- Sigma[1,2] / (sqrt([1,1] * Sigma[2,2])
r <- Sigma[1,2] / (sqrt(Sigma[1,1] * Sigma[2,2]))
r
rnorm(1,mean = 0, sqrt(Sigma[2,2]*(1-r^2)))
cor(df)
pnorm(1,mean = 0, sqrt(Sigma[2,2]*(1-r^2)))
dnorm(1,mean = 0, sqrt(Sigma[2,2]*(1-r^2)))
lm1
View(lm1)
lm1$coefficients
rnorm(10,mean = 0, sqrt(Sigma[2,2]*(1-r^2)))
rnorm(1,mean = 0, sqrt(Sigma[2,2]*(1-r^2)))
rnorm(1,mean = 0, sqrt(Sigma[2,2]*(1-r^2)))
rnorm(1,mean = 0, sqrt(Sigma[2,2]*(1-r^2)))
rnorm(1,mean = 0, sqrt(Sigma[2,2]*(1-r^2)))
rnorm(1,mean = 0, sqrt(Sigma[2,2]*(1-r^2)))
rnorm(1,mean = 0, sqrt(Sigma[2,2]*(1-r^2)))
rnorm(1,mean = 0, sqrt(Sigma[2,2]*(1-r^2)))
rnorm(1,mean = 0, sqrt(Sigma[2,2]*(1-r^2)))
lm(df[,2] ~ df[,1])
df <- mvrnorm(140,mu,Sigma)
num_bins <- length(hist(df[,2], breaks = "Sturges", freq = T)$breaks)
x_c <- cut(df[,1], num_bins)
y_c <- cut(df[,2], num_bins)
z <- table(x_c, y_c)
plot(df)
abline(lm(df[,2] ~ df[,1]))
#2#############
summary(lm(df[,2] ~ df[,1]))
library(psych)
install.packages("psychometric")
library(psychometric)
cov(df)[1,2]
df <- mvrnorm(140,mu,Sigma, empirical = T)
num_bins <- length(hist(df[,2], breaks = "Sturges", freq = T)$breaks)
x_c <- cut(df[,1], num_bins)
y_c <- cut(df[,2], num_bins)
z <- table(x_c, y_c)
plot(df)
abline(lm(df[,2] ~ df[,1]))
CIr(cov(df)[1,2])
cov(df)[1,2]
cov(df)[1,1]
cov(df)
n <- 140
mu <- c(1,-3)
Sigma <- matrix(c(1,-1,-1,2), byrow = T, ncol = 2)
df <- mvrnorm(140,mu,Sigma, empirical = T)
num_bins <- length(hist(df[,2], breaks = "Sturges", freq = T)$breaks)
x_c <- cut(df[,1], num_bins)
y_c <- cut(df[,2], num_bins)
z <- table(x_c, y_c)
cov(df)
cor(df)
cor(df)[1,2]
CIr(cor(df)[1,2])
CIr(cor(df)[1,2], n, 0.95)
CIr(-2, n, 0.95)
lm1$
lm1$fitted.values
lm1$df.residual
lm1$residuals
lm1$residuals[2]
minkowski
minkowski()
deriv(x^2,"x")
deriv(~x^2,"x")
func <- expression(x^2)
deriv(func,"x")
D(func,"x")
func[2]
dfunc <- deriv(func,"x")
dfunc
dfunc <- deriv3(func,"x")
dfunc
dfunc <- D(func,"x")
dfunc <- D(func,"x")
dfunc
func
eval(dfunc,3)
eval(dfunc)
x <- 3
eval(dfunc)
mean(df[,1])
meanx <- mean(df[,1])
meany <- mean(df[,2])
sum((df[,2] - meany)*(df[,1] - meanx))
beta2 <- (sum((df[,2] - meany)*(df[,1] - meanx)))/(sum((df[,1] - meanx)^2))
beta2
beta1 <- meany - beta2 * meanx
beta1
df
#
p <- 1
sigma_ost <- (sum(df[,2] - beta2 * df[,1] - beta1))/(n-p-1)
sigma_ost
lm1
summary(lm1)
cor(df)
plot(df)
abline(lm1)
alpha <- 0.95
alpha <- 0.05
qt(1-alpha/2, df)
qt(1-alpha/2, n-p-1)
confint(lm1, df[,2], 1-alpha)
1-alpha
confint(lm1, 2, level = 1-alpha)
confint(lm1, 1, level = 1-alpha)
confint(lm1, 2, level = 1-alpha)
lm1
confint(lm1, 1, level = 1-alpha)
lm1$coefficients[1]
lm1$coefficients[1] + qt(1-alpha/2, n-p-1)
lm1$coefficients[2] + qt(1-alpha/2, n-p-1)
lm1$coefficients[1] + qt(1-alpha/2, n-p-1)
lm1$coefficients[1,2]
summary(lm1)$coefficients[2,1]
lm1$coefficients[1]
summary(lm1)$coefficients[2,2]
summary(lm1)
summary(lm1)$coefficients[1,2]
lm1$effects
summary(lm1)$coefficients[1,1] + qt(1-alpha/2, n-p-1) * summary(lm1)$coefficients[1,2]
summary(lm1)$coefficients[1,1] + qt(1-alpha/2, n-p-1) * summary(lm1)$coefficients[1,2]
confint(lm1, 1, level = 1-alpha)
summary(lm1)$coefficients[1,1] + qt(1-alpha/2, n-p-1) * summary(lm1)$coefficients[1,2]
summary(lm1)$coefficients[1,1] - qt(1-alpha/2, n-p-1) * summary(lm1)$coefficients[1,2]
vcov(fit)
vcov(lm1)
summary(lm1)$coefficients
summary(lm1)$coefficients[1:2,1:2]
cov_matr <- matrix(c(-2,-1,-2,-1), byrow = T, ncol = 2)
cov_matr
r <- cor(df)[1,2]
sigma_ost <- (sum(df[,2] - beta2 * df[,1] - beta1))/(n-p-1)
sigma_ost
summary(lm1)
summary(lm1)
lm1_summ <- summary(lm1)
lm1_summ
lm1_summ$sigma
lm1_summ$sigma^2
df <- mvrnorm(140,mu,Sigma, empirical = T)
#3#############
Sigma[1,2] / (sqrt(Sigma[1,1] * Sigma[2,2]))
r <- cor(df)[1,2]
r
rnorm(1,mean = 0, sqrt(Sigma[2,2]*(1-r^2)))
rnorm(1,mean = 0, sqrt(Sigma[2,2]*(1-r^2)))
eps_k <- rnorm(n,mean = 0, sqrt(Sigma[2,2]*(1-r^2)))
eps_k
var(eps_k)
eps_k <- rnorm(n,mean = 0, sqrt(Sigma[2,2]*(1-r^2)))
var(eps_k)
confint.lm(lm1)
confint(lm1)
deviance(lm1)
resid(lm1)
lm1$residuals
lm1$residuals^2
anova(lm1)
anova(df)
anova(lm1)
anova(lm1)["Residuals", "Sum Sq"]
sum(resid(lm1)^2)
lm1$residuals^2 / qchisq(alpha/2, n-p-1)
sum(lm1$residuals^2) / qchisq(alpha/2, n-p-1)
sum(lm1$residuals^2) / qchisq(alpha/2, 1)
sum(lm1$residuals^2) / qchisq(1-alpha/2, 1)
sum(lm1$residuals^2) / qchisq(1-alpha/2, n-p-1)
var(eps_k)
var(eps_k) - sum(lm1$residuals^2) / qchisq(1-alpha/2, n-p-1)
var(eps_k) + sum(lm1$residuals^2) / qchisq(1-alpha/2, n-p-1)
var(eps_k) - sum(lm1$residuals^2) / qchisq(alpha/2, n-p-1)
var(eps_k) - sum(lm1$residuals^2) / qchisq(1 - alpha/2, n-p-1)
var(eps_k) + sum(lm1$residuals^2) / qchisq(1 - alpha/2, n-p-1)
x <- rnorm(n,mu[1], sqrt(Sigma[1,1]))
r <- Sigma[1,2] / sqrt(Sigma[1,1]*Sigma[2,2])
eps_k <- rnorm(n,mean = 0, sqrt(Sigma[2,2]*(1-r^2)))
#1##############
library(MASS)
alpha <- 0.05
n <- 140
mu <- c(1,-3)
Sigma <- matrix(c(1,-1,-1,2), byrow = T, ncol = 2)
x <- rnorm(n,mu[1], sqrt(Sigma[1,1]))
r <- Sigma[1,2] / sqrt(Sigma[1,1]*Sigma[2,2])
eps_k <- rnorm(n,mean = 0, sqrt(Sigma[2,2]*(1-r^2)))
y <- mu[2] + Sigma[1,2]/Sigma[1,1] * (x-mu[1]) + eps_k
mean(y)
sqrt(Sigma[2,2]*(1-r^2))
cov(x,y)
x <- rnorm(n,mu[1], sqrt(Sigma[1,1]))
r <- Sigma[1,2] / sqrt(Sigma[1,1]*Sigma[2,2])
eps_k <- rnorm(n,mean = 0, sqrt(Sigma[2,2]*(1-r^2)))
y <- mu[2] + Sigma[1,2]/Sigma[1,1] * (x-mu[1]) + eps_k
mean(y)
cov(x,y)
x <- rnorm(n,mu[1], sqrt(Sigma[1,1]))
r <- Sigma[1,2] / sqrt(Sigma[1,1]*Sigma[2,2])
eps_k <- rnorm(n,mean = 0, sqrt(Sigma[2,2]*(1-r^2)))
y <- mu[2] + Sigma[1,2]/Sigma[1,1] * (x-mu[1]) + eps_k
mean(y)
cov(x,y)
df <- matrix(c(x,y), ncol = 2)
df
num_bins <- length(hist(df[,2], breaks = "Sturges", freq = T)$breaks)
x_c <- cut(df[,1], num_bins)
y_c <- cut(df[,2], num_bins)
z <- table(x_c, y_c)
library(plot3D)
#length(z)
#floor(min(df[,1])):ceiling(max(df[,1]))
#nrow(x_c)
main_perspective1 <- hist3D(x = seq(from = floor(min(df[,1])), ceiling(max(df[,1])), length.out = nrow(z)),
y = seq(from = floor(min(df[,2])), ceiling(max(df[,2])), length.out = nrow(z)),
z=z, border="black", ticktype = "detailed", lighting=T,
bty = "g", phi = 30, theta = 40, lphi = 50)
main_perspective2 <- hist3D(x = seq(from = floor(min(df[,1])), ceiling(max(df[,1])), length.out = nrow(z)),
y = seq(from = floor(min(df[,2])), ceiling(max(df[,2])), length.out = nrow(z)),
z=z, border="black", ticktype = "detailed", lighting=T,
bty = "g", phi = 30, theta = 80, lphi = 50)
main_perspective3 <- hist3D(x = seq(from = floor(min(df[,1])), ceiling(max(df[,1])), length.out = nrow(z)),
y = seq(from = floor(min(df[,2])), ceiling(max(df[,2])), length.out = nrow(z)),
z=z, border="black", ticktype = "detailed", lighting=T,
bty = "g", phi = 30, theta = 120, lphi = 50)
main_perspective4 <- hist3D(x = seq(from = floor(min(df[,1])), ceiling(max(df[,1])), length.out = nrow(z)),
y = seq(from = floor(min(df[,2])), ceiling(max(df[,2])), length.out = nrow(z)),
z=z, border="black", ticktype = "detailed", lighting=T,
bty = "g", phi = 30, theta = 160, lphi = 50)
hist3D(x = seq(from = floor(min(df[,1])), ceiling(max(df[,1])), length.out = nrow(z)),
y = seq(from = floor(min(df[,2])), ceiling(max(df[,2])), length.out = nrow(z)),
z=z, border="black", ticktype = "detailed", lighting=T,
bty = "g", phi = 0, theta = 0, lphi = 50)
hist3D(x = seq(from = min(df[,1]), max(df[,1]), length.out = nrow(z)),
y = seq(from = min(df[,2]), max(df[,2]), length.out = nrow(z)),
z=z, border="black", ticktype = "detailed", lighting=T,
bty = "g", phi = 0, theta = 180, lphi = 50, d = 20)
plot(df)
#2#############
meanx <- mean(df[,1])
meany <- mean(df[,2])
beta_1 <- (n*sum(df[,1]*df[,2]) - sum[df,1]*sum[df,2])/(n*sum((df[,1])^2) - (sum(df[,1]))^2)
beta_1 <- (n*sum(df[,1]*df[,2]) - sum(df[,1])*sum(df[,2]))/(n*sum((df[,1])^2) - (sum(df[,1]))^2)
beta_1
beta2 <- (sum((df[,2] - meany)*(df[,1] - meanx)))/(sum((df[,1] - meanx)^2))
beta2
beta_0 <- sum(df[,2])/n - beta_1*sum(df[,1])/n
beta_0
beta1 <- meany - beta2 * meanx
beta1
lm1 <- lm(df[,2] ~ df[,1])
plot(df)
abline(lm1)
y_approx <- expression(beta_0 + beta_1 * x)
plot(df)
abline(y_approx)
curve(y_approx)
y_approx <- expression(beta_0 + beta_1 * x)
curve(y_approx)
seq(min(df[,1]),max(df[,1])
)
plot(seq(min(df[,1]),max(df[,1]), 0.1), beta_0 + beta_1 * x)
rm(x)
plot(seq(min(df[,1]),max(df[,1]), length.out = length(x)), beta_0 + beta_1 * x)
plot(seq(min(df[,1]),max(df[,1]), length.out = n), beta_0 + beta_1 * x)
plot(seq(min(df[,1]),max(df[,1]), length.out = n), beta_0 + beta_1 * seq(min(df[,1]),max(df[,1]))
)
plot(seq(min(df[,1]),max(df[,1]), length.out = n),
beta_0 + beta_1 * seq(min(df[,1]),max(df[,1]), length.out = n))
plot(seq(min(df[,1]),max(df[,1]), length.out = n),
beta_0 + beta_1 * seq(min(df[,1]),max(df[,1]), length.out = n), type = "l")
lm1 <- lm(df[,2] ~ df[,1])
plot(df)
plot(df)
abline(lm1)
summary(lm1)
beta_1
beta_0
p <- 1
sigma_ost <- (sum(df[,2] - beta2 * df[,1] - beta1))/(n-p-1)
sigma_ost
sigma_ost <- (sum((df[,2] - beta2 * df[,1] - beta1)^2))/(n-p-1)
sigma_ost
library(psychometric)
CIr(r, n, 0.95)
r
r <- Sigma[1,2] / sqrt(Sigma[1,1]*Sigma[2,2])
r
CIr_lower_bound <- tanh(atanh(r) - r/(2*(n-1)) - qnorm(1-alpha/2)/sqrt(n-3))
CIr_lower_bound
CIr_upper_bound <- tanh(atanh(r) - r/(2*(n-1)) + qnorm(1-alpha/2)/sqrt(n-3))
CIr_upper_bound
qnorm(0.05)
qnorm(1-0.05/2)
confint(lm1, 1, level = 1-alpha)
confint(lm1, 1, level = 1-alpha/2)
confint(lm1, 2, level = 1-alpha/2)
CIbeta0_lower_bound <- qnorm(1-alpha/2,0,(sqrt(sigma_ost * sum((d[,1])^2)))/(sqrt(2*n*(sum((d[,1])^2) - sum(df[,1])))))
CIbeta0_lower_bound <- qnorm(1-alpha/2,0,(sqrt(sigma_ost * sum((df[,1])^2)))/(sqrt(2*n*(sum((df[,1])^2) - sum(df[,1])))))
CIbeta0_lower_bound
confint(lm1, 1, level = 1-alpha/2)
confint(lm1, 1, level = 1-alpha)
confint(lm1, 2, level = 1-alpha)
CIbeta0_lower_bound <- qnorm(1-alpha/2,0,(sqrt(sigma_ost * sum((df[,1])^2)))/(sqrt(2*n*(sum((df[,1])^2) - sum(df[,1]))))) - beta_0
CIbeta0_lower_bound
confint(lm1, 1, level = 1-alpha/2)
confint(lm1, 2, level = 1-alpha/2)
beta_0
CIbeta0_lower_bound <- qnorm(1-alpha/2,0,(sqrt(sigma_ost * sum((df[,1])^2)))/(sqrt(n*(sum((df[,1])^2) - sum(df[,1]))) - beta_0
CIbeta0_lower_bound
CIbeta0_lower_bound <- qnorm(1-alpha/2,0,(sqrt(sigma_ost * sum((df[,1])^2)))/(sqrt(n*(sum((df[,1])^2) - sum(df[,1]))))) - beta_0
CIbeta0_lower_bound
confint(lm1, 1, level = 1-alpha/2)
CIbeta0_lower_bound <- qnorm(alpha/2,0,(sqrt(sigma_ost * sum((df[,1])^2)))/(sqrt(n*(sum((df[,1])^2) - sum(df[,1]))))) - beta_0
CIbeta0_lower_bound
CIbeta0_lower_bound <- qnorm(1-alpha/2,0,(sqrt(sigma_ost * sum((df[,1])^2)))/(sqrt(n*(sum((df[,1])^2) - sum(df[,1]))))) - beta_0
beta_0
CIbeta0_lower_bound <- qnorm(1-alpha/2,0,(sqrt(sigma_ost * sum((df[,1])^2)))/(sqrt(n*(sum((df[,1])^2) - sum(df[,1]))))) - beta_0
CIbeta0_lower_bound
confint(lm1, 1, level = 1-alpha/2)
confint(lm1, 1, level = 1-alpha)
CIbeta0_lower_bound <- - (qnorm(1-alpha/2,0,(sqrt(sigma_ost * sum((df[,1])^2)))/(sqrt(n*(sum((df[,1])^2) - sum(df[,1]))))) - beta_0)
CIbeta0_lower_bound
CIbeta0_upper_bound <- - (qnorm(alpha/2,0,(sqrt(sigma_ost * sum((df[,1])^2)))/(sqrt(n*(sum((df[,1])^2) - sum(df[,1]))))) - beta_0)
CIbeta0_upper_bound
CIbeta1_lower_bound <- - (qnorm(alpha/2,0,(sqrt(sigma_ost))/(sqrt(sum((df[,1])^2) - (sum(df[,1]))^2 / n))) - beta_1)
CIbeta1_lower_bound
confint(lm1, 2, level = 1-alpha/2)
confint(lm1, 2, level = 1-alpha)
CIbeta1_lower_bound <- - (qnorm(1-alpha/2,0,(sqrt(sigma_ost))/(sqrt(sum((df[,1])^2) - (sum(df[,1]))^2 / n))) - beta_1)
CIbeta1_lower_bound
CIbeta1_lower_bound <- - (qnorm(1-alpha/2,0,(sqrt(sigma_ost))/(sqrt(sum((df[,1])^2) - (sum(df[,1]))^2 / n))) - beta_1)
CIbeta1_upper_bound <- - (qnorm(1-alpha,0,(sqrt(sigma_ost))/(sqrt(sum((df[,1])^2) - (sum(df[,1]))^2 / n))) - beta_1)
CIbeta1_lower_bound
CIbeta1_upper_bound
CIbeta1_upper_bound <- - (qnorm(alpha/2,0,(sqrt(sigma_ost))/(sqrt(sum((df[,1])^2) - (sum(df[,1]))^2 / n))) - beta_1)
CIbeta1_lower_bound
CIbeta1_upper_bound
confint(lm1, 2, level = 1-alpha)
var(lm1)
qno
qnorm()
qnorm(alpha/2)
qnorm(-1+alpha/2)
qnorm(1-alpha/2)
(qnorm(1-alpha/2,0,(sqrt(sigma_ost))/(sqrt(sum((df[,1])^2) - (sum(df[,1]))^2 / n)))
)
qnorm(alpha/2,0,(sqrt(sigma_ost))/(sqrt(sum((df[,1])^2) - (sum(df[,1]))^2 / n)))
CIbeta1_lower_bound
CIbeta1_upper_bound
CIbeta1_lower_bound <-  (qnorm(alpha/2,0,(sqrt(sigma_ost))/(sqrt(sum((df[,1])^2) - (sum(df[,1]))^2 / n))) + beta_1)
CIbeta1_lower_bound
CIbeta1_upper_bound <-  (qnorm(1-alpha/2,0,(sqrt(sigma_ost))/(sqrt(sum((df[,1])^2) - (sum(df[,1]))^2 / n))) + beta_1)
CIbeta1_upper_bound
CIbeta1_lower_bound <-  (-qnorm(1-alpha/2,0,(sqrt(sigma_ost))/(sqrt(sum((df[,1])^2) - (sum(df[,1]))^2 / n))) + beta_1)
CIbeta1_lower_bound
CIbeta1_lower_bound <-  (-qnorm(1-alpha/2,0,(sqrt(sigma_ost))/(sqrt(sum((df[,1])^2) - (sum(df[,1]))^2 / n))) + beta_1)
CIbeta1_upper_bound <-  (qnorm(1-alpha/2,0,(sqrt(sigma_ost))/(sqrt(sum((df[,1])^2) - (sum(df[,1]))^2 / n))) + beta_1)
CIbeta1_lower_bound
CIbeta1_upper_bound
CIsigma_ost_lower_boud <- (qchisq(1-alpha/2, n-2))/((n-2)*sigma_ost)
CIsigma_ost_upper_boud <- (qchisq(alpha/2, n-2))/((n-2)*sigma_ost)
CIsigma_ost_lower_boud
CIsigma_ost_upper_boud
sigma_ost
confint(lm1)
summary(lm1)
CIsigma_ost_lower_boud <- (qchisq(1-alpha/2, n-2))/((n-2))*sigma_ost
CIsigma_ost_lower_boud
CIsigma_ost_lower_boud <- (qchisq(alpha/2, n-2))/((n-2))*sigma_ost
CIsigma_ost_upper_boud <- (qchisq(1-alpha/2, n-2))/((n-2))*sigma_ost
CIsigma_ost_lower_boud
CIsigma_ost_upper_boud
