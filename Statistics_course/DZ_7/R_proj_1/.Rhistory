dev.off()
png(filename = "../img/fit_norm.png",
width = 1920, height = 1080,
pointsize = 24, res = 96 * 1.25)
plot(fit.norm)
dev.off()
png(filename = "../img/fit_norm.png",
width = 1920, height = 1080,
pointsize = 24, res = 96 * 1)
plot(fit.norm)
dev.off()
png(filename = "../img/fit_norm.png",
width = 1920, height = 1080,
pointsize = 24, res = 96 * 1)
plot(fit.norm)
dev.off()
png(filename = "../img/fit_unif.png",
width = 1920, height = 1080,
pointsize = 24, res = 96 * 1)
plot(fit.uniform)
dev.off()
png(filename = "../img/fit_beta.png",
width = 1920, height = 1080,
pointsize = 24, res = 96 * 1)
plot(fit.beta)
dev.off()
hist(df$V1,
breaks = seq(min_el, max_el, by = bin_width),
xlim = c(0, 20), ylim = c(0.00,0.10), axes = F, freq = F,
main = "Histogram of data")
axis(1, seq(0, 20, 1))
axis(2, seq(0.00, 0.10, 0.01), las = 1)
stat_normal$
#3
dunif(15)
curve(dunif(x, min = min_el, max = max_el))
curve(dunif(x, min = min_el, max = max_el), 0, 8)
curve(dunif(x, min = 17.9383, max = 2.5978), 0, 8)
curve(dunif(x, min = 2.5978, max = 17.9383), 0, 8)
curve(dunif(x, min = 2.5978, max = 17.9383))
curve(dunif(c(0,20), min = 2.5978, max = 17.9383))
curve(dunif(seq(0,20,0.01), min = 2.5978, max = 17.9383))
stat_normal$
#3
plot_range <- seq(0, 20, 0.01)
dens_unif_plot <- dunif(plot_range, 2.5978, 17.9383)
stat_normal$
#3
plot_range <- seq(0, 20, 0.01)
dens_unif_plot <- dunif(plot_range, 2.5978, 17.9383)
seq(0, 20, 0.01)
stat_normal$
#3
plot_range <- seq(0, 20, 0.01)
plot_range <- seq(0, 20, 0.01)
dens_unif_plot <- dunif(plot_range, 2.5978, 17.9383)
plot(plot_range, y, type = "l")
plot(plot_range, dens_unif_plot, type = "l")
curve(plot_range, dens_unif_plot, type = "l", add)
curve(plot_range, dens_unif_plot, type = "l")
curve(dens_unif_plot)
curve(dunif(plot_range, 2.5978, 17.9383))
curve(dunif(x, 2.5978, 17.9383))
curve(dunif(x, 2.5978, 17.9383), 2.5978, 17.9383)
curve(dunif(x, 2.5978, 17.9383), 2.5978, 17.9383, xlim = c(0,20))
curve(dunif(x, 2.5978, 17.9383), 2.5978, 17.9383, xlim = c(0,20), add = T)
curve(dunif(x, 2.5978, 17.9383), 2.5978, 17.9383, xlim = c(0,20), add = T, col = "red")
hist(df$V1,
breaks = seq(min_el, max_el, by = bin_width),
xlim = c(0, 20), ylim = c(0.00,0.10), axes = F, freq = F,
main = "Histogram of data")
par(mar = c(3, 3, 2, 1), xaxs = "i", yaxs = "i")
pl1 <- hist(df$V1,
breaks = seq(min_el, max_el, by = bin_width),
xlim = c(0, 20), ylim = c(0.00,0.10), axes = F, freq = F,
main = "Histogram of data")
axis(1, seq(0, 20, 1))
axis(2, seq(0.00, 0.10, 0.01), las = 1)
grid(nx = 20, ny = 10, equilogs = F)
curve(dunif(x, 2.5978, 17.9383), 2.5978, 17.9383, xlim = c(0,20), add = T, col = "red")
curve(dunif(x, 2.5978, 17.9383), 2.5978, 17.9383, xlim = c(0,20), add = T, col = "red", lwd = 3)
legend("topright", c("uniform density"),
lty=c(1), bty = "n",
fill=c("black"))
legend("topright", c("uniform density"),
lty=c(1),
fill=c("black"))
legend("topright", c("uniform density"),
lty=c(1),
fill=c("red"))
png(filename = "../img/hist_without_dens.png",
width = 1920, height = 1080,
pointsize = 24, res = 96 * 1.25)
par(mar = c(3, 3, 2, 1), xaxs = "i", yaxs = "i")
pl1 <- hist(df$V1,
breaks = seq(min_el, max_el, by = bin_width),
xlim = c(0, 20), ylim = c(0.00,0.10), axes = F, freq = F,
main = "Histogram of data")
axis(1, seq(0, 20, 1))
axis(2, seq(0.00, 0.10, 0.01), las = 1)
grid(nx = 20, ny = 10, equilogs = F)
curve(dunif(x, 2.5978, 17.9383), 2.5978, 17.9383,
xlim = c(0,20), add = T, col = "red", lwd = 3)
legend("topright", c("uniform density"),
lty=c(1),
fill=c("red"))
dev.off()
png(filename = "../img/hist_without_dens.png",
width = 1920, height = 1080,
pointsize = 24, res = 96 * 1.25)
par(mar = c(3, 3, 2, 1), xaxs = "i", yaxs = "i")
pl1 <- hist(df$V1,
breaks = seq(min_el, max_el, by = bin_width),
xlim = c(0, 20), ylim = c(0.00,0.10), axes = F, freq = F,
main = "Histogram of data")
axis(1, seq(0, 20, 1))
axis(2, seq(0.00, 0.10, 0.01), las = 1)
grid(nx = 20, ny = 10, equilogs = F)
dev.off()
png(filename = "../img/hist_with_unif_dens.png",
width = 1920, height = 1080,
pointsize = 24, res = 96 * 1.25)
par(mar = c(3, 3, 2, 1), xaxs = "i", yaxs = "i")
pl1 <- hist(df$V1,
breaks = seq(min_el, max_el, by = bin_width),
xlim = c(0, 20), ylim = c(0.00,0.10), axes = F, freq = F,
main = "Histogram of data")
axis(1, seq(0, 20, 1))
axis(2, seq(0.00, 0.10, 0.01), las = 1)
grid(nx = 20, ny = 10, equilogs = F)
curve(dunif(x, 2.5978, 17.9383), 2.5978, 17.9383,
xlim = c(0,20), add = T, col = "red", lwd = 3)
legend("topright", c("uniform density"),
lty=c(1),
fill=c("red"))
dev.off()
plot(df$V1)
plot(df$V1, lty = "l")
plot(df$V1, lty = 1)
plot(df$V1, lty = 2)
df <- read.csv("db.csv", header = F) #data import
#############################################################################
#5
N <- length(df$V1)
x <- sort(df$V1)
#############################################################################
#5
n <- length(df$V1)
x <- sort(df$V1)
rval <- approxfun(vals, cumsum(tabulate(match(x, vals)))/n,
method = "constant", yleft = 0, yright = 1, f = 0,
ties = "ordered")
vals <- unique(x)
rval <- approxfun(vals, cumsum(tabulate(match(x, vals)))/n,
method = "constant", yleft = 0, yright = 1, f = 0,
ties = "ordered")
rval
n <- length(df$V1)
x <- sort(df$V1)
vals <- unique(x)
rval <- approxfun(vals, cumsum(tabulate(match(x, vals)))/n,
method = "constant", yleft = 0, yright = 1, f = 0,
ties = "ordered")
n <- length(df$V1)
x <- sort(df$V1)
vals <- unique(x)
rval <- approxfun(vals, cumsum(tabulate(match(x, vals)))/n,
method = "constant", yleft = 0, yright = 1, f = 0,
ties = "ordered")
rval <- approxfun(vals, cumsum(tabulate(match(x, vals)))/n,
method = "constant", yleft = 0, yright = 1, f = 0,
ties = "ordered")
n <- length(df$V1)
x <- sort(df$V1)
vals <- unique(x)
rval <- approxfun(vals,
cumsum(tabulate(match(x, vals)))/n,
method = "constant", yleft = 0, yright = 1, f = 0,
ties = "ordered")
par(mar = c(3, 3, 2, 1), xaxs = "i", yaxs = "i")
pl1 <- hist(df$V1,
breaks = seq(min_el, max_el, by = bin_width),
xlim = c(0, 20), ylim = c(0.00,0.10), axes = F, freq = F,
main = "Histogram of data")
axis(1, seq(0, 20, 1))
axis(2, seq(0.00, 0.10, 0.01), las = 1)
grid(nx = 20, ny = 10, equilogs = F)
plot(ecdf(x))
hist(ecdf(df$V1),
breaks = seq(min_el, max_el, by = bin_width),
xlim = c(0, 20), ylim = c(0.00,0.10), axes = F, freq = F,
main = "Histogram of data")
axis(1, seq(0, 20, 1))
axis(2, seq(0.00, 0.10, 0.01), las = 1)
grid(nx = 20, ny = 10, equilogs = F)
ecdf(x)
ecdf(pl1$counts)
plot(ecdf(pl1$counts))
plot(ecdf(pl1$breaks))
hist(df$V1,
breaks = seq(min_el, max_el, by = bin_width),
xlim = c(0, 20), ylim = c(0.00,0.10), axes = F, freq = F,
main = "Histogram of data")
axis(1, seq(0, 20, 1))
axis(2, seq(0.00, 0.10, 0.01), las = 1)
grid(nx = 20, ny = 10, equilogs = F)
plot(ecdf(pl1$breaks))
plot(ecdf(x))
lines (x, (1:n)/n, type = 's', col="blue")
plot(ecdf(x))
curve(punif(x, 2.5978, 17.9383), 2.5978, 17.9383,
xlim = c(0,20), add = T, col = "red", lwd = 3)
plot(ecdf(x), main = "Эмпирическая и теоретическая CDF")
lines (x, (1:n)/n, type = 's', col="blue")
curve(punif(x, 2.5978, 17.9383), 2.5978, 17.9383,
xlim = c(0,20), add = T, col = "red", lwd = 3)
legend("bottomright")
legend("bottomright", c("emperical CDF", "theoritical CDF"), lty = c("s", "l"))
plot(ecdf(x), main = "Empirical and theoritical distribution functions", lwd = 3)
plot(ecdf(x), main = "Empirical and theoritical distribution functions", lwd = 3, col = "lightblue")
lines (x, (1:n)/n, type = 's', col="blue", lwd = 2)
plot(ecdf(x), main = "Empirical and theoritical distribution functions", lwd = 3, col = "lightgreen")
lines (x, (1:n)/n, type = 's', col="blue", lwd = 2)
curve(punif(x, 2.5978, 17.9383), 2.5978, 17.9383,
xlim = c(0,20), add = T, col = "red", lwd = 3)
View(rval)
rval(x)
plot(rval(x))
png(filename = "../img/emp_and_theor_CDF.png",
width = 1920, height = 1080,
pointsize = 24, res = 96 * 1.25)
plot(ecdf(x), main = "Empirical and theoritical distribution functions", lwd = 3, col = "lightgreen")
lines (x, (1:n)/n, type = 's', col="blue", lwd = 2)
curve(punif(x, 2.5978, 17.9383), 2.5978, 17.9383,
xlim = c(0,20), add = T, col = "red", lwd = 3)
legend("bottomright", c("emperical CDF", "theoritical CDF"), lty = c("3", "1"), )
dev.off()
png(filename = "../img/emp_and_theor_CDF.png",
width = 1920, height = 1080,
pointsize = 24, res = 96 * 1.25)
plot(ecdf(x), main = "Empirical and theoritical distribution functions", lwd = 3, col = "lightgreen")
lines (x, (1:n)/n, type = 's', col="blue", lwd = 2)
curve(punif(x, 2.5978, 17.9383), 2.5978, 17.9383,
xlim = c(0,20), add = T, col = "red", lwd = 3)
legend("bottomright", c("emperical CDF", "theoritical CDF"), lty = c("3", "1"), col = c("blue", "red"))
dev.off()
png(filename = "../img/emp_and_theor_CDF.png",
width = 1920, height = 1080,
pointsize = 24, res = 96 * 1.25)
plot(ecdf(x), main = "Empirical and theoritical distribution functions", lwd = 3, col = "lightgreen")
lines (x, (1:n)/n, type = 's', col="blue", lwd = 2)
curve(punif(x, 2.5978, 17.9383), 2.5978, 17.9383,
xlim = c(0,20), add = T, col = "red", lwd = 3)
legend("bottomright", c("emperical CDF", "theoritical CDF"), lty = c("2", "1"), col = c("blue", "red"))
dev.off()
plot(ecdf(x), main = "Empirical and theoritical distribution functions", lwd = 3, col = "lightgreen")
lines (x, (1:n)/n, type = 's', col="blue", lwd = 2)
curve(punif(x, 2.5978, 17.9383), 2.5978, 17.9383,
xlim = c(0,20), add = T, col = "red", lwd = 3)
legend("bottomright", c("emperical CDF", "theoritical CDF"), lty = c("2", "1"), col = c("blue", "red"))
legend("bottomright", c("emperical CDF", "theoritical CDF"), lty = c("1", "2"), col = c("blue", "red"))
legend("bottomright", c("emperical CDF", "theoritical CDF"), lty = c("2", "2"), col = c("blue", "red"))
legend("bottomright", c("emperical CDF", "theoritical CDF"), lty = c("2", "1", "3"), col = c("blue", "red"))
legend("topright", c("emperical CDF", "theoritical CDF"), lty = c("2", "1"), col = c("blue", "red"))
plot(ecdf(x), main = "Empirical and theoritical distribution functions", lwd = 3, col = "lightgreen")
lines (x, (1:n)/n, type = 's', col="blue", lwd = 2)
curve(punif(x, 2.5978, 17.9383), 2.5978, 17.9383,
xlim = c(0,20), add = T, col = "red", lwd = 3)
legend("topright", c("emperical CDF", "theoritical CDF"), lty = c(2,1), col = c("blue", "red"))
legend("topright", c("emperical CDF", "theoritical CDF"), lty = 1, col = c("blue", "red"))
png(filename = "../img/emp_and_theor_CDF.png",
width = 1920, height = 1080,
pointsize = 24, res = 96 * 1.25)
plot(ecdf(x), main = "Empirical and theoritical distribution functions", lwd = 3, col = "lightgreen")
lines (x, (1:n)/n, type = 's', col="blue", lwd = 2)
curve(punif(x, 2.5978, 17.9383), 2.5978, 17.9383,
xlim = c(0,20), add = T, col = "red", lwd = 3)
legend("bottomright", c("emperical CDF", "theoritical CDF"), lty = 1, col = c("blue", "red"))
dev.off()
plot(ecdf(x), main = "Empirical and theoritical distribution functions", lwd = 3, col = "lightgreen")
lines (x, (1:n)/n, type = 's', col="blue", lwd = 2)
curve(punif(x, 2.5978, 17.9383), 2.5978, 17.9383,
xlim = c(0,20), add = T, col = "red", lwd = 3)
legend("bottomright", c("emperical CDF", "theoritical CDF"), lty = 1, col = c("blue", "red"))
png(filename = "../img/emp_and_theor_CDF.png",
width = 1920, height = 1080,
pointsize = 24, res = 96 * 1.25)
plot(ecdf(x),
main = "Empirical and theoritical distribution functions",
lwd = 3, col = "lightgreen")
lines (x, (1:n)/n, type = 's',
col="blue", lwd = 2)
curve(punif(x, 2.5978, 17.9383), 2.5978, 17.9383,
xlim = c(0,20), add = T,
col = "red", lwd = 3)
legend("bottomright",
c("emperical CDF", "theoritical CDF"),
lty = 1, col = c("blue", "red"))
dev.off()
axis(1, seq(0, 20, 1))
png(filename = "../img/emp_and_theor_CDF.png",
width = 1920, height = 1080,
pointsize = 24, res = 96 * 1.25)
plot(ecdf(x),
main = "Empirical and theoritical distribution functions",
lwd = 3, col = "lightgreen")
lines (x, (1:n)/n, type = 's',
col="blue", lwd = 2)
curve(punif(x, 2.5978, 17.9383), 2.5978, 17.9383,
xlim = c(0,20), add = T,
col = "red", lwd = 3)
legend("bottomright",
c("emperical CDF", "theoritical CDF"),
lty = 1, col = c("blue", "red"))
axis(1, seq(0, 20, 1))
dev.off()
png(filename = "../img/emp_and_theor_CDF.png",
width = 1920, height = 1080,
pointsize = 24, res = 96 * 1.25)
plot(ecdf(x),
main = "Empirical and theoritical distribution functions",
lwd = 3, col = "lightgreen",
xlab = "", ylab = "")
lines (x, (1:n)/n, type = 's',
col="blue", lwd = 2)
curve(punif(x, 2.5978, 17.9383), 2.5978, 17.9383,
xlim = c(0,20), add = T,
col = "red", lwd = 3)
legend("bottomright",
c("emperical CDF", "theoritical CDF"),
lty = 1, col = c("blue", "red"))
axis(1, seq(0, 20, 1))
dev.off()
plot(ecdf(x),
main = "Empirical and theoritical distribution functions",
lwd = 3, col = "lightgreen",
xlab = "", ylab = "")
lines (x, (1:n)/n, type = 's',
col="blue", lwd = 2)
curve(punif(x, 2.5978, 17.9383), 2.5978, 17.9383,
xlim = c(0,20), add = T,
col = "red", lwd = 3)
legend("bottomright",
c("emperical CDF", "theoritical CDF"),
lty = 1, col = c("blue", "red"))
axis(1, seq(0, 20, 1))
length(df)
#$###########################################################################
chisq.test(df$V1)
qchisq(0.01,119)
#$###########################################################################
chisq.test(df$V1)
qchisq(0.01,119)
pt
file <- read.csv("doc.csv", header = F) #???????????? ????????????
####################################################
#1
max_element <- max(file) #???????????????????????? ?????????????? ??????????????
max_element
min_element <- min(file) #?????????????????????? ?????????????? ??????????????
min_element
w <- max_element - min_element #???????????? ??????????????
w
sort(file$V1) #???????????????????? ?????????????? ???? ??????????????????????
n <- length(file$V1) #???????????????????? ????????????
n
#####################################################
#2
numofint = floor(1 + log2(length(file$V1))) #?????????? ???????????????????? ???? ?????????????? ????????????????????
numofint
width<- w / numofint # ???????????? ??????????????????
width
#####################################################
#####################################################
relative_freq <- plot1$counts / length(file$V1) #
relative_freq
relative_freq/width
plot1$density
plot1$breaks
plot1$mids - width/2
plot1$breaks
p1 <- pchisq(plot1$breaks[2], mean_element)
p2 <- pchisq(plot1$breaks[3], mean_element) - pchisq(plot1$breaks[2], mean_element)
p3 <- pchisq(plot1$breaks[4], mean_element) - pchisq(plot1$breaks[3], mean_element)
p4 <- pchisq(plot1$breaks[5], mean_element) - pchisq(plot1$breaks[4], mean_element)
p5 <- pchisq(plot1$breaks[6], mean_element) - pchisq(plot1$breaks[5], mean_element)
p6 <- pchisq(plot1$breaks[7], mean_element) - pchisq(plot1$breaks[6], mean_element)
p7 <- pchisq(plot1$breaks[8], mean_element) - pchisq(plot1$breaks[7], mean_element)
p8 <- 1 - p1 - p2 - p3 - p4 - p5 - p6 - p7
p1+p2+p3+p4+p5+p6+p7+p8
pt <- c(p1,p2,p3,p4,p5,p6,p7,p8)
npt <- pt * n
chi_sq <- sum((pt[-(7:8)] - relative_freq[-c(7:8)])^2/(pt[-(7:8)]) +
(p7 + p8 - relative_freq[7] - relative_freq[8])^2 / (p7 + p8))
qchisq(0.95,5)
chisq.test(file)
sum(npt)
pchisq(plot1$breaks[-2], mean_element) - pchisq(plot1$breaks[-length(plot1$breaks)], mean_element)
plot1$breaks[-1]
plot1$breaks[-length(plot1$breaks)]
relative_freq/bin_width
plot1$density
p1 <- pchisq(pl1$breaks[2], mean_element)
p1 <- pchisq(pl1$breaks[2], mean_el)
p2 <- pchisq(pl1$breaks[3], mean_el) - pchisq(pl1$breaks[2], mean_el)
p3 <- pchisq(pl1$breaks[4], mean_el) - pchisq(pl1$breaks[3], mean_el)
p4 <- pchisq(pl1$breaks[5], mean_el) - pchisq(pl1$breaks[4], mean_el)
p5 <- pchisq(pl1$breaks[6], mean_el) - pchisq(pl1$breaks[5], mean_el)
p6 <- pchisq(pl1$breaks[7], mean_el) - pchisq(pl1$breaks[6], mean_el)
p7 <- pchisq(pl1$breaks[8], mean_el) - pchisq(pl1$breaks[7], mean_el)
p8 <- 1 - p1 - p2 - p3 - p4 - p5 - p6 - p7
p1+p2+p3+p4+p5+p6+p7+p8
pt <- c(p1,p2,p3,p4,p5,p6,p7,p8)
npt <- pt * n
chi_sq <- sum((pt[-(7:8)] - relative_freq[-c(7:8)])^2/(pt[-(7:8)]) +
(p7 + p8 - relative_freq[7] - relative_freq[8])^2 / (p7 + p8))
sum(npt)
sum(chi_sq)
View(df)
a <- 2.579
b <- 17.938
p1 <- punif(pl1$breaks[2],a,b)
p2 <- punif(pl1$breaks[3],a,b) - punif(pl1$breaks[2],a,b)
p3 <- punif(pl1$breaks[4],a,b) - punif(pl1$breaks[3],a,b)
p4 <- punif(pl1$breaks[5],a,b) - punif(pl1$breaks[4],a,b)
p5 <- punif(pl1$breaks[6],a,b) - punif(pl1$breaks[5],a,b)
p6 <- punif(pl1$breaks[7],a,b) - punif(pl1$breaks[6],a,b)
p7 <- punif(pl1$breaks[8],a,b) - punif(pl1$breaks[7],a,b)
p8 <- 1 - p1 - p2 - p3 - p4 - p5 - p6 - p7
p1+p2+p3+p4+p5+p6+p7+p8
pt <- c(p1,p2,p3,p4,p5,p6,p7,p8)
npt <- pt * n
sum(npt)
chi_sq <- sum((pt[-(7:8)] - relative_freq[-c(7:8)])^2/(pt[-(7:8)]) +
(p7 + p8 - relative_freq[7] - relative_freq[8])^2 / (p7 + p8))
sum(chi_sq)
pt
npt
chi_sq <- sum((pt - relative_freq)^2/(pt)
chi_sq
chi_sq <- sum((pt - relative_freq)^2/(pt))
chi_sq
qchisq(0.99,5)
qchisq(0.99,5)
chisq.test(df)
chisq.test(df, correct = F)
df
chisq.test(df$V1)
pl1$breaks[-c(1:2)]
pl1$breaks
pl1$breaks[-c(1:2)]
pl1$breaks[-c((length((pl1$breaks))-1):length((pl1$breaks)))]
pl1$breaks[-c(1:3)]
pl1$breaks[-c(1:1)]
pl1$breaks[7]
pl1$breaks[-1,-length(pl1$breaks)]
pl1$breaks[-c(1,length(pl1$breaks))]
pl1$breaks[8]
pl1$breaks[2]
pl1$breaks[3]
pl1$breaks[-c(2,length(pl1$breaks))]
pl1$breaks[-c(1:2,length(pl1$breaks))]
pl1$breaks[-c(1,(length((pl1$breaks))-2):length((pl1$breaks)))]
pl1$breaks[-c(1,(length((pl1$breaks))-1):length((pl1$breaks)))]
punif(pl1$breaks[2]
punif(pl1$breaks[2]
pl1$breaks[2]
pl1$breaks[7]
pt
pchisq(pl1$breaks[-c(1:2,length(pl1$breaks))], mean_el) - pchisq(pl1$breaks[-c(1,(length((pl1$breaks))-1):length((pl1$breaks)))], mean_el)
punif(pl1$breaks[-c(1:2,length(pl1$breaks))], a,b) - punif(pl1$breaks[-c(1,(length((pl1$breaks))-1):length((pl1$breaks)))], a,b)
pt <- c(punif(pl1$breaks[2],a,b),punif(pl1$breaks[-c(1:2,length(pl1$breaks))], a,b)
- punif(pl1$breaks[-c(1,(length((pl1$breaks))-1):length((pl1$breaks)))], a,b))
pt
c(p1,p2,p3,p4,p5,p6,p7,p8)
pt
pt <- c(pt, 1-cumsum(pt))
pt
pt <- c(punif(pl1$breaks[2],a,b),punif(pl1$breaks[-c(1:2,length(pl1$breaks))], a,b)
- punif(pl1$breaks[-c(1,(length((pl1$breaks))-1):length((pl1$breaks)))], a,b))
pt
cumsum(pt)
pt <- c(punif(pl1$breaks[2],a,b),punif(pl1$breaks[-c(1:2,length(pl1$breaks))], a,b)
- punif(pl1$breaks[-c(1,(length((pl1$breaks))-1):length((pl1$breaks)))], a,b))
pt <- c(pt, 1-sum(pt))
pt <- c(pt, 1-sum(pt))
pt <- c(punif(pl1$breaks[2],a,b),punif(pl1$breaks[-c(1:2,length(pl1$breaks))], a,b)
- punif(pl1$breaks[-c(1,(length((pl1$breaks))-1):length((pl1$breaks)))], a,b))
pt <- c(pt, 1-sum(pt))
pt
pt
#$###########################################################################
#$###########################################################################
chisq.test(pt, relative_freq)
pt
relative_freq
qchisq(0.01,119)
chi_sq
summary(df$V1)
head(df$V1)
length(df)
#$###########################################################################
#$###########################################################################
chisq.test(df$V1, dunif(length(df$V1),a,b))
df$V1
length(df$V1)
unif(length(df$V1),a,b)
dunif(length(df$V1),a,b)
runif(length(df$V1),a,b)
#$###########################################################################
#$###########################################################################
chisq.test(df$V1, runif(length(df$V1),a,b))
