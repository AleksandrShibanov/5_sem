sum(chi_sq)
pt
npt
chi_sq <- sum((pt - relative_freq)^2/(pt)
chi_sq
chi_sq <- sum((pt - relative_freq)^2/(pt))
chi_sq
qchisq(0.99,5)
qchisq(0.99,5)
chisq.test(df)
chisq.test(df, correct = F)
df
chisq.test(df$V1)
pl1$breaks[-c(1:2)]
pl1$breaks
pl1$breaks[-c(1:2)]
pl1$breaks[-c((length((pl1$breaks))-1):length((pl1$breaks)))]
pl1$breaks[-c(1:3)]
pl1$breaks[-c(1:1)]
pl1$breaks[7]
pl1$breaks[-1,-length(pl1$breaks)]
pl1$breaks[-c(1,length(pl1$breaks))]
pl1$breaks[8]
pl1$breaks[2]
pl1$breaks[3]
pl1$breaks[-c(2,length(pl1$breaks))]
pl1$breaks[-c(1:2,length(pl1$breaks))]
pl1$breaks[-c(1,(length((pl1$breaks))-2):length((pl1$breaks)))]
pl1$breaks[-c(1,(length((pl1$breaks))-1):length((pl1$breaks)))]
punif(pl1$breaks[2]
punif(pl1$breaks[2]
pl1$breaks[2]
pl1$breaks[7]
pt
pchisq(pl1$breaks[-c(1:2,length(pl1$breaks))], mean_el) - pchisq(pl1$breaks[-c(1,(length((pl1$breaks))-1):length((pl1$breaks)))], mean_el)
punif(pl1$breaks[-c(1:2,length(pl1$breaks))], a,b) - punif(pl1$breaks[-c(1,(length((pl1$breaks))-1):length((pl1$breaks)))], a,b)
pt <- c(punif(pl1$breaks[2],a,b),punif(pl1$breaks[-c(1:2,length(pl1$breaks))], a,b)
- punif(pl1$breaks[-c(1,(length((pl1$breaks))-1):length((pl1$breaks)))], a,b))
pt
c(p1,p2,p3,p4,p5,p6,p7,p8)
pt
pt <- c(pt, 1-cumsum(pt))
pt
pt <- c(punif(pl1$breaks[2],a,b),punif(pl1$breaks[-c(1:2,length(pl1$breaks))], a,b)
- punif(pl1$breaks[-c(1,(length((pl1$breaks))-1):length((pl1$breaks)))], a,b))
pt
cumsum(pt)
pt <- c(punif(pl1$breaks[2],a,b),punif(pl1$breaks[-c(1:2,length(pl1$breaks))], a,b)
- punif(pl1$breaks[-c(1,(length((pl1$breaks))-1):length((pl1$breaks)))], a,b))
pt <- c(pt, 1-sum(pt))
pt <- c(pt, 1-sum(pt))
pt <- c(punif(pl1$breaks[2],a,b),punif(pl1$breaks[-c(1:2,length(pl1$breaks))], a,b)
- punif(pl1$breaks[-c(1,(length((pl1$breaks))-1):length((pl1$breaks)))], a,b))
pt <- c(pt, 1-sum(pt))
pt
pt
#$###########################################################################
#$###########################################################################
chisq.test(pt, relative_freq)
pt
relative_freq
qchisq(0.01,119)
chi_sq
summary(df$V1)
head(df$V1)
length(df)
#$###########################################################################
#$###########################################################################
chisq.test(df$V1, dunif(length(df$V1),a,b))
df$V1
length(df$V1)
unif(length(df$V1),a,b)
dunif(length(df$V1),a,b)
runif(length(df$V1),a,b)
#$###########################################################################
#$###########################################################################
chisq.test(df$V1, runif(length(df$V1),a,b))
df <- read.csv("db.csv", header = F) #data import
df <- read.csv("db.csv", header = F) #data import
df
df$V1
df <- unlist(read.csv("db.csv", header = F)) #data import
df
df <- unlist(read.csv("db.csv", header = F), use.names = F) #data import
df
df <- read.csv("db.csv", header = F) #data import
df$V1
pl1
chi_sq <- sum((pt - plot1$counts)^2/(pt))
pl1$breaks
pl1$breaks
chi_sq <- sum((pt - pl1$counts)^2/(pt))
chi_sq
chisq.test(df$V1)
chisq.test(df$V1, dunif(120,a,b))
chisq.test(df$V1, runif(120,a,b))
1 + log2(length(df$V1))
ceiling(log2(length(df$V1)))+1
pt1 <- c(punif(pl1$breaks[2],a,b),punif(pl1$breaks[-c(1:2,length(pl1$breaks))], a,b)
- punif(pl1$breaks[-c(1,(length((pl1$breaks))-1):length((pl1$breaks)))], a,b))
pt1
pt <- c(pt, 1-sum(pt1))
pt
npt <- pt * n
npt
chi_sq <- sum((pt - pl1$counts)^2/(pt))
chi_sq
pt
pl1$counts
ls(pt)
rm(pt)
pr(pt1)
rm(pt1)
pt1 <- c(punif(pl1$breaks[2],a,b),punif(pl1$breaks[-c(1:2,length(pl1$breaks))], a,b)
- punif(pl1$breaks[-c(1,(length((pl1$breaks))-1):length((pl1$breaks)))], a,b))
pt1
pt <- c(pt, 1-sum(pt1))
pt
rm(pt,pt1)
pt1 <- c(punif(pl1$breaks[2],a,b),punif(pl1$breaks[-c(1:2,length(pl1$breaks))], a,b)
- punif(pl1$breaks[-c(1,(length((pl1$breaks))-1):length((pl1$breaks)))], a,b))
pt1
rm(pt1)
relative_freq <- pl1$counts / length(df$V1)
relative_freq
relative_freq/bin_width
pl1$density
pl1$breaks
pl1$mids - width/2
pl1$breaks
a <- 2.579
b <- 17.938
pt1 <- c(punif(pl1$breaks[2],a,b),punif(pl1$breaks[-c(1:2,length(pl1$breaks))], a,b)
- punif(pl1$breaks[-c(1,(length((pl1$breaks))-1):length((pl1$breaks)))], a,b))
pt1
pt <- c(pt, 1-sum(pt1))
pt
npt <- pt * n
npt
chi_sq <- sum((pt - pl1$counts)^2/(pt))
chi_sq
pt1
1-sum(pt1)
rm(pt,pt1)
pt1 <- c(punif(pl1$breaks[2],a,b),punif(pl1$breaks[-c(1:2,length(pl1$breaks))], a,b)
- punif(pl1$breaks[-c(1,(length((pl1$breaks))-1):length((pl1$breaks)))], a,b))
pt1
pt <- c(pt1, 1-sum(pt1))
pt
npt <- pt * n
npt
chi_sq <- sum((pt - pl1$counts)^2/(pt))
chi_sq
rm(pt,pt1)
pt1 <- c(punif(pl1$breaks[2],a,b),punif(pl1$breaks[-c(1:2,length(pl1$breaks))], a,b)
- punif(pl1$breaks[-c(1,(length((pl1$breaks))-1):length((pl1$breaks)))], a,b))
pt1
pt <- c(pt1, 1-sum(pt1))
pt
npt <- pt * n
npt
chi_sq <- sum((pt - pl1$counts)^2/(pt))
chi_sq
rm(pt,pt1)
pt1 <- c(punif(pl1$breaks[2],a,b),
punif(pl1$breaks[-c(1:2,length(pl1$breaks))], a,b)
- punif(pl1$breaks[-c(1,(length((pl1$breaks))-1):
length((pl1$breaks)))], a,b))
pt1
pt <- c(pt1, 1-sum(pt1))
pt
npt <- pt * n
npt
chi_sq <- sum((npt - pl1$counts)^2/(npt))
chi_sq
qchisq(0.99,5)
png(filename = "../img/hist_with_unif_dens.png",
width = 1920, height = 1080,
pointsize = 24, res = 96 * 1.25)
par(mar = c(3, 3, 2, 1), xaxs = "i", yaxs = "i")
pl1 <- hist(df$V1,
breaks = seq(min_el, max_el, by = bin_width),
xlim = c(0, 20), ylim = c(0.00,0.10), axes = F, freq = F,
main = "Histogram of data")
axis(1, seq(0, 20, 1))
axis(2, seq(0.00, 0.10, 0.01), las = 1)
grid(nx = 20, ny = 10, equilogs = F)
curve(dunif(x, 2.5978, 17.9383), 2.5978, 17.9383,
xlim = c(0,20), add = T, col = "red", lwd = 3)
legend("topright", c("uniform density"),
lty=c(1),
fill=c("red"))
dev.off()
df <- read.csv("enrika.csv", header = F) #data import
df$V1
df <- read.csv("enrika.csv", header = F, sep = ";") #data import
df$V1
df
df <- read.csv("enrika.csv", header = F, sep = ";") #data import
df$V1
df
##############################################################################
#1
max_el <- max(df)
max_el
max_el
min_el <- min(df)
min_el
range_el <- max_el - min_el
range_el
sort(df$V1)
length(df)
###############################################################################
#2
num_bins = round(1 + log2(length(df$V1)))
#$###########################################################################
relative_freq <- pl1$counts / length(df$V1)
relative_freq
relative_freq/bin_width
pl1$density
pl1$breaks
pl1$mids - width/2
pl1$breaks
a <- min(df)
b <- max(df)
pt1 <- c(punif(pl1$breaks[2],a,b),
punif(pl1$breaks[-c(1:2,length(pl1$breaks))], a,b)
- punif(pl1$breaks[-c(1,(length((pl1$breaks))-1):
length((pl1$breaks)))], a,b))
pt1
pt <- c(pt1, 1-sum(pt1))
pt
npt <- pt * n
npt
chi_sq <- sum((npt - pl1$counts)^2/(npt))
chi_sq
qchisq(0.99,5)
chisq.test(df$V1, runif(120,a,b))
png(filename = "../img/hist_with_unif_dens_enrika.png",
width = 1920, height = 1080,
pointsize = 24, res = 96 * 1.25)
par(mar = c(3, 3, 2, 1), xaxs = "i", yaxs = "i")
pl1 <- hist(df$V1,
breaks = seq(min_el, max_el, by = bin_width),
xlim = c(0, 20), ylim = c(0.00,0.10), axes = F, freq = F,
main = "Histogram of data")
axis(1, seq(0, 20, 1))
axis(2, seq(0.00, 0.10, 0.01), las = 1)
grid(nx = 20, ny = 10, equilogs = F)
curve(dunif(x, 2.5978, 17.9383), 2.5978, 17.9383,
xlim = c(0,20), add = T, col = "red", lwd = 3)
legend("topright", c("uniform density"),
lty=c(1),
fill=c("red"))
dev.off()
max_el <- max(df)
max_el
min_el <- min(df)
min_el
range_el <- max_el - min_el
range_el
df <- read.csv("enrika.csv", header = F, sep = ";") #data import
max_el <- max(df)
max_el
min_el <- min(df)
min_el
range_el <- max_el - min_el
range_el
num_bins = round(1 + log2(length(df$V1)))
num_bins
bin_width <- range_el / num_bins
bin_width
pl1 <- hist(df$V1,
breaks = seq(min_el, max_el, by = bin_width),
xlim = c(0, 20), ylim = c(0.00,0.10), axes = F, freq = F,
main = "Histogram of data", plot = F)
relative_freq <- pl1$counts / length(df$V1)
relative_freq
relative_freq/bin_width
pl1$density
pl1$breaks
pl1$mids - width/2
pl1$breaks
a <- min(df)
b <- max(df)
pt1 <- c(punif(pl1$breaks[2],a,b),
punif(pl1$breaks[-c(1:2,length(pl1$breaks))], a,b)
- punif(pl1$breaks[-c(1,(length((pl1$breaks))-1):
length((pl1$breaks)))], a,b))
pt1
pt <- c(pt1, 1-sum(pt1))
pt
npt <- pt * n
npt
chi_sq <- sum((npt - pl1$counts)^2/(npt))
chi_sq
qchisq(0.99,5)
png(filename = "../img/hist_with_unif_dens_enrika.png",
width = 1920, height = 1080,
pointsize = 24, res = 96 * 1.25)
par(mar = c(3, 3, 2, 1), xaxs = "i", yaxs = "i")
pl1 <- hist(df$V1,
breaks = seq(min_el, max_el, by = bin_width),
xlim = c(0, 20), ylim = c(0.00,0.10), axes = F, freq = F,
main = "Histogram of data")
axis(1, seq(0, 20, 1))
axis(2, seq(0.00, 0.10, 0.01), las = 1)
grid(nx = 20, ny = 10, equilogs = F)
curve(dunif(x, 2.5978, 17.9383), 2.5978, 17.9383,
xlim = c(0,20), add = T, col = "red", lwd = 3)
legend("topright", c("uniform density"),
lty=c(1),
fill=c("red"))
dev.off()
png(filename = "../img/hist_with_unif_dens_enrika.png",
width = 1920, height = 1080,
pointsize = 24, res = 96 * 1.25)
par(mar = c(3, 3, 2, 1), xaxs = "i", yaxs = "i")
pl1 <- hist(df$V1,
breaks = seq(min_el, max_el, by = bin_width),
xlim = c(0, 20), ylim = c(0.00,0.10), axes = F, freq = F,
main = "Histogram of data")
axis(1, seq(0, 20, 1))
axis(2, seq(0.00, 0.10, 0.01), las = 1)
grid(nx = 20, ny = 10, equilogs = F)
curve(dunif(x, 2.5978, 17.9383), 2.5978, 17.9383,
xlim = c(0,20), add = T, col = "red", lwd = 3)
legend("topright", c("uniform density"),
lty=c(1),
fill=c("red"))
dev.off()
df <- read.csv("enrika.csv", header = F, sep = ";") #data import
max_el <- max(df)
max_el
min_el <- min(df)
min_el
range_el <- max_el - min_el
range_el
###############################################################################
#2
num_bins = round(1 + log2(length(df$V1)))
num_bins
bin_width <- range_el / num_bins
bin_width
pl1 <- hist(df$V1,
breaks = seq(min_el, max_el, by = bin_width),
xlim = c(0, 10), ylim = c(0.00,0.10), axes = F, freq = F,
main = "Histogram of data", plot = F)
relative_freq <- pl1$counts / length(df$V1)
relative_freq
relative_freq/bin_width
pl1$density
pl1$breaks
pl1$mids - width/2
pl1$breaks
a <- min(df)
b <- max(df)
pt1 <- c(punif(pl1$breaks[2],a,b),
punif(pl1$breaks[-c(1:2,length(pl1$breaks))], a,b)
- punif(pl1$breaks[-c(1,(length((pl1$breaks))-1):
length((pl1$breaks)))], a,b))
pt1
pt <- c(pt1, 1-sum(pt1))
pt
npt <- pt * n
npt
chi_sq <- sum((npt - pl1$counts)^2/(npt))
chi_sq
qchisq(0.99,5)
png(filename = "../img/hist_with_unif_dens_enrika.png",
width = 1920, height = 1080,
pointsize = 24, res = 96 * 1.25)
par(mar = c(3, 3, 2, 1), xaxs = "i", yaxs = "i")
pl1 <- hist(df$V1,
breaks = seq(min_el, max_el, by = bin_width),
xlim = c(0, 10), ylim = c(0.00,0.10), axes = F, freq = F,
main = "Histogram of data")
axis(1, seq(0, 10, 1))
axis(2, seq(0.00, 0.10, 0.01), las = 1)
grid(nx = 20, ny = 10, equilogs = F)
curve(dunif(x, a, b), a, b,
xlim = c(0,10), add = T, col = "red", lwd = 3)
legend("topright", c("uniform density"),
lty=c(1),
fill=c("red"))
dev.off()
df <- read.csv("enrika.csv", header = F, sep = ";") #data import
##############################################################################
#1
max_el <- max(df)
max_el
min_el <- min(df)
min_el
range_el <- max_el - min_el
range_el
###############################################################################
#2
num_bins = round(1 + log2(length(df$V1)))
num_bins
bin_width <- range_el / num_bins
bin_width
pl1 <- hist(df$V1,
breaks = seq(min_el, max_el, by = bin_width),
xlim = c(-10, 10), ylim = c(0.00,0.10), axes = F, freq = F,
main = "Histogram of data", plot = F)
relative_freq <- pl1$counts / length(df$V1)
relative_freq
relative_freq/bin_width
pl1$density
pl1$breaks
pl1$mids - width/2
pl1$breaks
a <- min(df)
b <- max(df)
pt1 <- c(punif(pl1$breaks[2],a,b),
punif(pl1$breaks[-c(1:2,length(pl1$breaks))], a,b)
- punif(pl1$breaks[-c(1,(length((pl1$breaks))-1):
length((pl1$breaks)))], a,b))
pt1
pt <- c(pt1, 1-sum(pt1))
pt
npt <- pt * n
npt
chi_sq <- sum((npt - pl1$counts)^2/(npt))
chi_sq
length(df$V1)
df <- read.csv("enrika.csv", header = F, sep = ";") #data import
##############################################################################
#1
max_el <- max(df)
max_el
min_el <- min(df)
min_el
range_el <- max_el - min_el
range_el
###############################################################################
#2
num_bins = round(1 + log2(length(df$V1)))
num_bins
bin_width <- range_el / num_bins
#$###########################################################################
#$###########################################################################
pl1 <- hist(df$V1,
breaks = seq(min_el, max_el, by = bin_width),
xlim = c(-10, 10), ylim = c(0.00,0.10), axes = F, freq = F,
main = "Histogram of data", plot = F)
n <- length(df$V1)
relative_freq <- pl1$counts / length(df$V1)
relative_freq
relative_freq/bin_width
pl1$density
pl1$breaks
pl1$mids - width/2
df <- read.csv("enrika.csv", header = F, sep = ";") #data import
##############################################################################
#1
max_el <- max(df)
max_el
min_el <- min(df)
min_el
range_el <- max_el - min_el
range_el
###############################################################################
#2
num_bins = round(1 + log2(length(df$V1)))
num_bins
bin_width <- range_el / num_bins
bin_width
#$###########################################################################
#$###########################################################################
pl1 <- hist(df$V1,
breaks = seq(min_el, max_el, by = bin_width),
xlim = c(-10, 10), ylim = c(0.00,0.10), axes = F, freq = F,
main = "Histogram of data", plot = F)
n <- length(df$V1)
relative_freq <- pl1$counts / length(df$V1)
relative_freq
relative_freq/bin_width
pl1$density
pl1$breaks
pl1$breaks
a <- min(df)
b <- max(df)
pt1 <- c(punif(pl1$breaks[2],a,b),
punif(pl1$breaks[-c(1:2,length(pl1$breaks))], a,b)
- punif(pl1$breaks[-c(1,(length((pl1$breaks))-1):
length((pl1$breaks)))], a,b))
pt1
pt <- c(pt1, 1-sum(pt1))
pt
npt <- pt * n
npt
chi_sq <- sum((npt - pl1$counts)^2/(npt))
chi_sq
qchisq(0.98,5)
png(filename = "../img/hist_with_unif_dens_enrika.png",
width = 1920, height = 1080,
pointsize = 24, res = 96 * 1.25)
par(mar = c(3, 3, 2, 1), xaxs = "i", yaxs = "i")
pl1 <- hist(df$V1,
breaks = seq(min_el, max_el, by = bin_width),
xlim = c(-10, 10), ylim = c(0.00,0.10), axes = F, freq = F,
main = "Histogram of data")
axis(1, seq(-10, 10, 1))
axis(2, seq(0.00, 0.10, 0.01), las = 1)
grid(nx = 20, ny = 10, equilogs = F)
curve(dunif(x, a, b), a, b,
xlim = c(-10,10), add = T, col = "red", lwd = 3)
legend("topright", c("uniform density"),
lty=c(1),
fill=c("red"))
dev.off()
