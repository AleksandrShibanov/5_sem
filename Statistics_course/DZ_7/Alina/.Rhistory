plot1$breaks -width/2
plot1
plot1
hist(file$V1, col="gray70",
breaks = seq(min_element, max_element, by = width),
xlim = c(0, 25), ylim = c(0.00,0.12), axes = F, freq = F,
main = "Histogram")
paramentrs(mar = c(3, 3, 2, 1), xaxs = "i", yaxs = "i")
plot1 <- hist(file$V1, col="gray70",
breaks = seq(min_element, max_element, by = width),
xlim = c(0, 25), ylim = c(0.00,0.12), axes = F, freq = F,
main = "Histogram")
axis(1, seq(0, 25, 1))
axis(2, seq(0.00, 0.12, 0.01), las = 1)
relative_freq/width
plot1$density
plot1$mids - width/2
plot1$breaks
plot1$breaks[-1]
plot1$breaks[-length(plot1$breaks)]
pchisq(plot1$breaks[-1], mean_element) - pchisq(plot1$breaks[-length(plot1$breaks)], mean_element)
sum(pchisq(plot1$breaks[-1], mean_element) - pchisq(plot1$breaks[-length(plot1$breaks)], mean_element))
plot1$breaks
pchisq(plot1$breaks[2])
pchisq(plot1$breaks[2], mean_element)
hist(file$V1, col="gray70",
breaks = seq(min_element, max_element, by = width),
xlim = c(0, 25), ylim = c(0.00,0.12), freq = F,
main = "Histogram")
axis(1, seq(0, 25, 1))
plot1$breaks
plot1$mids - width/2
pchisq(plot1$breaks[-1], mean_element) - pchisq(plot1$breaks[-length(plot1$breaks)], mean_element)
plot1$breaks[-1]
plot1$breaks
p1 <- pchisq(plot1$breaks[3], mean_element) - pchisq(plot1$breaks[2], mean_element)
p2 <- pchisq(plot1$breaks[4], mean_element) - pchisq(plot1$breaks[3], mean_element)
p3 <- pchisq(plot1$breaks[5], mean_element) - pchisq(plot1$breaks[4], mean_element)
p4 <- pchisq(plot1$breaks[6], mean_element) - pchisq(plot1$breaks[5], mean_element)
p5 <- pchisq(plot1$breaks[7], mean_element) - pchisq(plot1$breaks[8], mean_element)
p6 <- pchisq(plot1$breaks[8], mean_element) - pchisq(plot1$breaks[7], mean_element)
p1 <- pchisq(plot1$breaks[2], mean_element)
p2 <- pchisq(plot1$breaks[3], mean_element) - pchisq(plot1$breaks[2], mean_element)
p3 <- pchisq(plot1$breaks[4], mean_element) - pchisq(plot1$breaks[3], mean_element)
p4 <- pchisq(plot1$breaks[5], mean_element) - pchisq(plot1$breaks[4], mean_element)
p5 <- pchisq(plot1$breaks[6], mean_element) - pchisq(plot1$breaks[5], mean_element)
p6 <- pchisq(plot1$breaks[7], mean_element) - pchisq(plot1$breaks[8], mean_element)
p7 <- pchisq(plot1$breaks[8], mean_element) - pchisq(plot1$breaks[7], mean_element)
p8 <- 1 - p1 - p2 - p3 - p4 - p5 - p6 - p7
p8
p1+p2+p3+p4+p5+p6+p7+p8
pt <- c(p1,p2,p3,p4,p5,p6,p7,p8)
npt <- pt * n
npt
sym(npt)
sum(npt)
p4 <- pchisq(plot1$breaks[5], mean_element) - pchisq(plot1$breaks[4], mean_element)
p5 <- pchisq(plot1$breaks[6], mean_element) - pchisq(plot1$breaks[5], mean_element)
p6 <- pchisq(plot1$breaks[7], mean_element) - pchisq(plot1$breaks[6], mean_element)
p7 <- pchisq(plot1$breaks[8], mean_element) - pchisq(plot1$breaks[7], mean_element)
p8 <- 1 - p1 - p2 - p3 - p4 - p5 - p6 - p7
p1+p2+p3+p4+p5+p6+p7+p8
pt <- c(p1,p2,p3,p4,p5,p6,p7,p8)
npt <- pt * n
sum(npt)
npt
pt[-(7:8)]
relative_freq[-c(7:8)]
chi_sq <- sum((pt[-(7:8)] - relative_freq[-c(7:8)])^2/(pt[-(7:8)]) +
(pt7 + pt8 - relative_freq[7] - relative_freq[8])^2 / (pt7 + pt8))
chi_sq <- sum((pt[-(7:8)] - relative_freq[-c(7:8)])^2/(pt[-(7:8)]) +
(p7 + p8 - relative_freq[7] - relative_freq[8])^2 / (p7 + p8))
chi_sq
qchisq(0.95,5)
chisq.test(file)
par(mar = c(3, 3, 2, 1), xaxs = "i", yaxs = "i")
plot1 <- hist(file$V1, col="gray70",
breaks = seq(min_element, max_element, by = width),
xlim = c(0, 25), ylim = c(0.00,0.12), axes = F, freq = F,
main = "Histogram with Chisq density")
axis(1, seq(0, 25, 1))
axis(2, seq(0.00, 0.12, 0.01), las = 1)
curve(dchisq(x, df=10.02202 ), 0.15, 25,
xlim = c(0,20), add = T, col = "blue", lwd = 3)
par(mar = c(3, 3, 2, 1), xaxs = "i", yaxs = "i")
plot1 <- hist(file$V1, col="gray70",
breaks = seq(min_element, max_element, by = width),
xlim = c(0, 25), ylim = c(0.00,0.12), axes = F, freq = F,
main = "Histogram with Chisq density")
axis(1, seq(0, 25, 1))
axis(2, seq(0.00, 0.12, 0.01), las = 1)
curve(dchisq(x, df=10), 0.15, 25,
xlim = c(0,20), add = T, col = "blue", lwd = 3)
par(mar = c(3, 3, 2, 1), xaxs = "i", yaxs = "i")
plot1 <- hist(file$V1, col="gray70",
breaks = seq(min_element, max_element, by = width),
xlim = c(0, 25), ylim = c(0.00,0.12), axes = F, freq = F,
main = "Histogram with Chisq density")
axis(1, seq(0, 25, 1))
axis(2, seq(0.00, 0.12, 0.01), las = 1)
curve(dchisq(x, df=10), 0.15, 25,
xlim = c(0,20), add = T, col = "blue", lwd = 3)
#####################################################
#2
numofint = floor(1 + log2(length(file$V1))) #?????????? ???????????????????? ???? ?????????????? ????????????????????
numofint
width<- w / numofint # ???????????? ??????????????????
width
par(mar = c(3, 3, 2, 1), xaxs = "i", yaxs = "i")
plot1 <- hist(file$V1, col="gray70",
breaks = seq(min_element, max_element, by = width),
xlim = c(0, 25), ylim = c(0.00,0.12), axes = F, freq = F,
main = "Histogram with Chisq density")
axis(1, seq(0, 25, 1))
axis(2, seq(0.00, 0.12, 0.01), las = 1)
curve(dchisq(x, df=10), 0.15, 25,
xlim = c(0,20), add = T, col = "blue", lwd = 3)
file <- read.csv("doc.csv", header = F) #???????????? ????????????
####################################################
#1
max_element <- max(file) #???????????????????????? ?????????????? ??????????????
max_element
min_element <- min(file) #?????????????????????? ?????????????? ??????????????
min_element
w <- max_element - min_element #???????????? ??????????????
w
sort(file$V1) #???????????????????? ?????????????? ???? ??????????????????????
n <- length(file$V1) #???????????????????? ????????????
n
#####################################################
#2
numofint = round(1 + log2(length(file$V1))) #?????????? ???????????????????? ???? ?????????????? ????????????????????
numofint
width<- w / numofint # ???????????? ??????????????????
width
#####################################################
#####################################################
relative_freq <- plot1$counts / length(file$V1) #
relative_freq
relative_freq/width
plot1$density
plot1$breaks
#####################################################
#####################################################
relative_freq <- plot1$counts / length(file$V1) #
relative_freq
relative_freq/width
plot1$density
plot1$breaks
file <- read.csv("doc.csv", header = F) #???????????? ????????????
####################################################
#1
max_element <- max(file) #???????????????????????? ?????????????? ??????????????
max_element
min_element <- min(file) #?????????????????????? ?????????????? ??????????????
min_element
w <- max_element - min_element #???????????? ??????????????
w
sort(file$V1) #???????????????????? ?????????????? ???? ??????????????????????
n <- length(file$V1) #???????????????????? ????????????
n
#####################################################
#2
numofint = round(1 + log2(length(file$V1))) #?????????? ???????????????????? ???? ?????????????? ????????????????????
numofint
width<- w / numofint # ???????????? ??????????????????
width
#####################################################
#####################################################
relative_freq <- plot1$counts / length(file$V1) #
relative_freq
relative_freq/width
plot1$density
plot1$breaks
plot1$mids - width/2
plot1$breaks
plot1$mids - width/2
plot1$breaks
####################################################
#1
max_element <- max(file) #???????????????????????? ?????????????? ??????????????
max_element
min_element <- min(file) #?????????????????????? ?????????????? ??????????????
min_element
w <- max_element - min_element #???????????? ??????????????
w
sort(file$V1) #???????????????????? ?????????????? ???? ??????????????????????
n <- length(file$V1) #???????????????????? ????????????
n
#####################################################
#2
numofint = round(1 + log2(length(file$V1))) #?????????? ???????????????????? ???? ?????????????? ????????????????????
numofint
width<- w / numofint # ???????????? ??????????????????
width
#####################################################
#####################################################
relative_freq <- plot1$counts / length(file$V1) #
relative_freq
relative_freq/width
plot1$density
plot1$breaks
plot1$mids - width/2
plot1$breaks
p1 <- pchisq(plot1$breaks[2], mean_element)
p2 <- pchisq(plot1$breaks[3], mean_element) - pchisq(plot1$breaks[2], mean_element)
p3 <- pchisq(plot1$breaks[4], mean_element) - pchisq(plot1$breaks[3], mean_element)
p4 <- pchisq(plot1$breaks[5], mean_element) - pchisq(plot1$breaks[4], mean_element)
p5 <- pchisq(plot1$breaks[6], mean_element) - pchisq(plot1$breaks[5], mean_element)
p6 <- pchisq(plot1$breaks[7], mean_element) - pchisq(plot1$breaks[6], mean_element)
p7 <- pchisq(plot1$breaks[8], mean_element) - pchisq(plot1$breaks[7], mean_element)
p8 <- 1 - p1 - p2 - p3 - p4 - p5 - p6 - p7
p1+p2+p3+p4+p5+p6+p7+p8
pt <- c(p1,p2,p3,p4,p5,p6,p7,p8)
npt <- pt * n
chi_sq <- sum((pt[-(7:8)] - relative_freq[-c(7:8)])^2/(pt[-(7:8)]) +
(p7 + p8 - relative_freq[7] - relative_freq[8])^2 / (p7 + p8))
qchisq(0.95,5)
chi_sq
chi_sq <- sum((pt[-(7:8)] - relative_freq[-c(7:8)])^2/(pt[-(7:8)]) +
(p7 + p8 - relative_freq[7] - relative_freq[8])^2 / (p7 + p8))
chi_sq
qchisq(0.95,5)
chisq.test(file)
sum(npt)
pchisq(plot1$breaks[-2], mean_element) - pchisq(plot1$breaks[-length(plot1$breaks)], mean_element)
plot1$breaks[-1]
plot1$breaks[-length(plot1$breaks)]
par(mar = c(3, 3, 2, 1), xaxs = "i", yaxs = "i")
plot1 <- hist(file$V1, col="gray70",
breaks = seq(min_element, max_element, by = width),
xlim = c(0, 25), ylim = c(0.00,0.12), axes = F, freq = F,
main = "Histogram with Chisq density")
axis(1, seq(0, 25, 1))
axis(2, seq(0.00, 0.12, 0.01), las = 1)
curve(dchisq(x, df=10), 0.15, 25,
xlim = c(0,20), add = T, col = "blue", lwd = 3)
####################################################
#1
max_element <- max(file) #???????????????????????? ?????????????? ??????????????
max_element
min_element <- min(file) #?????????????????????? ?????????????? ??????????????
min_element
w <- max_element - min_element #???????????? ??????????????
w
sort(file$V1) #???????????????????? ?????????????? ???? ??????????????????????
n <- length(file$V1) #???????????????????? ????????????
n
#####################################################
#2
numofint = round(1 + log2(length(file$V1))) #?????????? ???????????????????? ???? ?????????????? ????????????????????
numofint
width<- w / numofint # ???????????? ??????????????????
width
#####################################################
#####################################################
relative_freq <- plot1$counts / length(file$V1) #
relative_freq
relative_freq/width
plot1$density
plot1$breaks
plot1$mids - width/2
plot1$mids - width/2
plot1$breaks
width/2
plot1$mids - width/2
ppp<-plot1$mids - width/2
ppp
ppp<-plot1$mids - width/2
plot1$breaks
file <- read.csv("doc.csv", header = F) #???????????? ????????????
####################################################
#1
max_element <- max(file) #???????????????????????? ?????????????? ??????????????
max_element
min_element <- min(file) #?????????????????????? ?????????????? ??????????????
min_element
w <- max_element - min_element #???????????? ??????????????
w
sort(file$V1) #???????????????????? ?????????????? ???? ??????????????????????
n <- length(file$V1) #???????????????????? ????????????
n
#####################################################
#2
numofint = round(1 + log2(length(file$V1))) #?????????? ???????????????????? ???? ?????????????? ????????????????????
numofint
width<- w / numofint # ???????????? ??????????????????
width
#####################################################
#####################################################
relative_freq <- plot1$counts / length(file$V1) #
relative_freq
relative_freq/width
plot1$density
plot1$breaks
ppp<-plot1$mids - width/2
plot1$breaks
ppp
p1 <- pchisq(plot1$breaks[2], mean_element)
p2 <- pchisq(plot1$breaks[3], mean_element) - pchisq(plot1$breaks[2], mean_element)
p3 <- pchisq(plot1$breaks[4], mean_element) - pchisq(plot1$breaks[3], mean_element)
p4 <- pchisq(plot1$breaks[5], mean_element) - pchisq(plot1$breaks[4], mean_element)
p5 <- pchisq(plot1$breaks[6], mean_element) - pchisq(plot1$breaks[5], mean_element)
p6 <- pchisq(plot1$breaks[7], mean_element) - pchisq(plot1$breaks[6], mean_element)
p7 <- pchisq(plot1$breaks[8], mean_element) - pchisq(plot1$breaks[7], mean_element)
p8 <- 1 - p1 - p2 - p3 - p4 - p5 - p6 - p7
p1+p2+p3+p4+p5+p6+p7+p8
pt <- c(p1,p2,p3,p4,p5,p6,p7,p8)
npt <- pt * n
chi_sq <- sum((pt[-(7:8)] - relative_freq[-c(7:8)])^2/(pt[-(7:8)]) +
(p7 + p8 - relative_freq[7] - relative_freq[8])^2 / (p7 + p8))
qchisq(0.95,5)
chisq.test(file)
sum(npt)
pchisq(plot1$breaks[-2], mean_element) - pchisq(plot1$breaks[-length(plot1$breaks)], mean_element)
sum(chi_sq)
width/2
relative_freq/width
plot1$mids
plot1$mids
ppp<-plot1$mids - width/2
ppp
#####################################################
#####################################################
relative_freq <- plot1$counts / length(file$V1) #
relative_freq
relative_freq/width
plot1$density
plot1$breaks
mean(file$V1)
variance_element
p1 <- pchisq(plot1$breaks[2], mean_element)
p1
p2
p3
p4
p5
p6
p7
p8
p1 <- pchisq(plot1$breaks[2], 10.022)
p1
pchisq
p1
p1 <- pchisq(plot1$breaks[2], 10)
p1
mean_element
p1
p
p1 <- pchisq(plot1$breaks[2], mean_element)
p1
pt
sum(pt\)
sum(pt)
npt <- pt * n
npt
sum(npt)
p7+p8
npt[7]+npt[8]
chi_sq <- sum((pt[-(7:8)] - relative_freq[-c(7:8)])^2/(pt[-(7:8)]) +
(p7 + p8 - relative_freq[7] - relative_freq[8])^2 / (p7 + p8))
chi_sq
p7 + p8)
(p7 + p8)
relative_freq[8]
chi_sq <- sum((npt[-(7:8)] - relative_freq[-c(7:8)])^2/(npt[-(7:8)]) +
(npt[7] + npt[8] - relative_freq[7] - relative_freq[8])^2 / (npt[7] + npt[8]))
chi_sq
sum(chi_sq)
qchisq(0.95,5)
npt[1]
(npt[1]-9)^2/npt[1]+(npt[2]-30)^2/npt[2]+(npt[3]-34)^2/npt[3]+(npt[4]-20)^2/npt[4+(npt[5]-15)^2/npt[5]]+(npt[6]-6)^2/npt[6]+(npt[7]+npt[8]-6)^2/(npt[7]+npt[8])
npt[-(7:8)]
relative_freq[-c(7:8)]
plot1$counts
chi_sq <- sum((npt[-(7:8)] -  plot1$counts[-c(7:8)])^2/(npt[-(7:8)]) +
(npt[7] + npt[8] - relative_freq[7] - relative_freq[8])^2 / (npt[7] + npt[8]))
sum(chi_sq)
chi_sq <- sum((npt[-(7:8)] -  plot1$counts[-c(7:8)])^2/(npt[-(7:8)]) +
(npt[7] + npt[8] -  plot1$counts[7] -  plot1$counts[8])^2 / (npt[7] + npt[8]))
sum(chi_sq)
plot1$counts[7]
qchisq(0.95,5)
(npt[1]-9)^2/npt[1]+(npt[2]-30)^2/npt[2]+(npt[3]-34)^2/npt[3]+(npt[4]-20)^2/npt[4+(npt[5]-15)^2/npt[5]]+(npt[6]-6)^2/npt[6]+(npt[7]+npt[8]-6)^2/(npt[7]+npt[8])
chi_sq <- sum((npt[-(7:8)] -  plot1$counts[-c(7:8)])^2/(npt[-(7:8)]) +
(npt[7] + npt[8] -  plot1$counts[7] -  plot1$counts[8])^2 / (npt[7] + npt[8]))
sum(chi_sq)
plot1$counts
npt[7] + npt[8]
plot1$counts[7] -  plot1$counts[8]
-  plot1$counts[7] -  plot1$counts[8]
npt[7]+npt[8]
npt[7] + npt[8]
npt[-(7:8)]
chi_sq <- sum((npt[-(7:8)] -  plot1$counts[-c(7:8)])^2/(npt[-(7:8)]) +
(npt[7] + npt[8] -  plot1$counts[7] -  plot1$counts[8])^2 / (npt[7] + npt[8]))
sum(chi_sq)
(npt[1]-9)^2/npt[1]+(npt[2]-30)^2/npt[2]+(npt[3]-34)^2/npt[3]+(npt[4]-20)^2/npt[4+(npt[5]-15)^2/npt[5]]+(npt[6]-6)^2/npt[6]+(npt[7]+npt[8]-6)^2/(npt[7]+npt[8])
file <- read.csv("doc.csv", header = F) #???????????? ????????????
####################################################
#1
max_element <- max(file) #???????????????????????? ?????????????? ??????????????
max_element
min_element <- min(file) #?????????????????????? ?????????????? ??????????????
min_element
w <- max_element - min_element #???????????? ??????????????
w
sort(file$V1) #???????????????????? ?????????????? ???? ??????????????????????
n <- length(file$V1) #???????????????????? ????????????
n
#####################################################
#2
numofint = round(1 + log2(length(file$V1))) #?????????? ???????????????????? ???? ?????????????? ????????????????????
numofint
width<- w / numofint # ???????????? ??????????????????
width
mean(file$V1)
vari
#####################################################
#####################################################
relative_freq <- plot1$counts / length(file$V1) #
relative_freq
relative_freq/width
#####################################################
#####################################################
plot1 <- hist(file$V1, col="gray70",
breaks = seq(min_element, max_element, by = width),
xlim = c(0, 25), ylim = c(0.00,0.12), axes = F, freq = F,
main = "Histogram with Chisq density", plot = F)
#####################################################
#####################################################
plot1 <- hist(file$V1, col="gray70",
breaks = seq(min_element, max_element, by = width),
xlim = c(0, 25), ylim = c(0.00,0.12), axes = F, freq = F,
main = "Histogram with Chisq density", plot = T)
#####################################################
#####################################################
plot1 <- hist(file$V1, col="gray70",
breaks = seq(min_element, max_element, by = width),
xlim = c(0, 25), ylim = c(0.00,0.12), axes = F, freq = F,
main = "Histogram with Chisq density", plot = F)
relative_freq <- plot1$counts / length(file$V1) #
relative_freq
relative_freq/width
plot1$density
plot1$breaks
ppp<-plot1$mids - width/2
plot1$breaks
p1 <- pchisq(plot1$breaks[2], mean_element)
p2 <- pchisq(plot1$breaks[3], mean_element) - pchisq(plot1$breaks[2], mean_element)
p3 <- pchisq(plot1$breaks[4], mean_element) - pchisq(plot1$breaks[3], mean_element)
p4 <- pchisq(plot1$breaks[5], mean_element) - pchisq(plot1$breaks[4], mean_element)
p5 <- pchisq(plot1$breaks[6], mean_element) - pchisq(plot1$breaks[5], mean_element)
p6 <- pchisq(plot1$breaks[7], mean_element) - pchisq(plot1$breaks[6], mean_element)
p7 <- pchisq(plot1$breaks[8], mean_element) - pchisq(plot1$breaks[7], mean_element)
p8 <- 1 - p1 - p2 - p3 - p4 - p5 - p6 - p7
p1+p2+p3+p4+p5+p6+p7+p8
pt <- c(p1,p2,p3,p4,p5,p6,p7,p8)
npt <- pt * n
file
mean_elemt <- mean(file)
mean_elemt
####################################################
#1
max_element <- max(file$V1) #???????????????????????? ?????????????? ??????????????
max_element
min_element <- min(file$V1) #?????????????????????? ?????????????? ??????????????
min_element
mean_elemt <- mean(file$V1)
mean_elemt
mean(file$V1)
#####################################################
#####################################################
plot1 <- hist(file$V1, col="gray70",
breaks = seq(min_element, max_element, by = width),
xlim = c(0, 25), ylim = c(0.00,0.12), axes = F, freq = F,
main = "Histogram with Chisq density", plot = F)
relative_freq <- plot1$counts / length(file$V1) #
relative_freq
relative_freq/width
plot1$density
plot1$breaks
ppp<-plot1$mids - width/2
plot1$breaks
p1 <- pchisq(plot1$breaks[2], mean_element)
mean_element <- mean(file$V1)
p1 <- pchisq(plot1$breaks[2], mean_element)
p2 <- pchisq(plot1$breaks[3], mean_element) - pchisq(plot1$breaks[2], mean_element)
p3 <- pchisq(plot1$breaks[4], mean_element) - pchisq(plot1$breaks[3], mean_element)
p4 <- pchisq(plot1$breaks[5], mean_element) - pchisq(plot1$breaks[4], mean_element)
p5 <- pchisq(plot1$breaks[6], mean_element) - pchisq(plot1$breaks[5], mean_element)
p6 <- pchisq(plot1$breaks[7], mean_element) - pchisq(plot1$breaks[6], mean_element)
p7 <- pchisq(plot1$breaks[8], mean_element) - pchisq(plot1$breaks[7], mean_element)
p8 <- 1 - p1 - p2 - p3 - p4 - p5 - p6 - p7
p1+p2+p3+p4+p5+p6+p7+p8
pt <- c(p1,p2,p3,p4,p5,p6,p7,p8)
npt <- pt * n
chi_sq <- sum((npt[-(7:8)] -  plot1$counts[-c(7:8)])^2/(npt[-(7:8)]) +
(npt[7] + npt[8] -  plot1$counts[7] -  plot1$counts[8])^2 / (npt[7] + npt[8]))
chi_sq
chi_sq <- sum((npt[-(7:8)] - plot1$counts[-c(7:8)])^2/(npt[-(7:8)]) +
(npt[7] + npt[8] - plot1$counts[7] - plot1$counts[8])^2 / (npt[7] + npt[8]))
chi_sq
par(mar = c(3, 3, 2, 1), xaxs = "i", yaxs = "i")
plot1 <- hist(file$V1, col="gray70",
breaks = seq(min_element, max_element, by = width),
xlim = c(0, 25), ylim = c(0.00,0.12), axes = F, freq = F,
main = "Histogram with Chisq density")
axis(1, seq(0, 25, 1))
axis(2, seq(0.00, 0.12, 0.01), las = 1)
curve(dchisq(x, df=10), 0.15, 25,
xlim = c(0,20), add = T, col = "blue", lwd = 3)
