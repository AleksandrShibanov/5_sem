q
set.seed(1336)
y <- runif(n, 0, 1)
p_p <- rep(0,k+2)
p_p[1] <- sum(y < q[1])
for (i in 2:(k+2))
{
p_p[i] <- sum(ifelse(y < q[i] & y >= q[i-1], 1, 0))
}
p_p
#sum(p_p)
q_q <- rep(NA,k+1)
q_q <- ifelse(y < q[1], 0,
ifelse(y < q[2] & y >= q[2-1], 1,
ifelse(y < q[3] & y >= q[3-1], 2,
ifelse(y < q[4] & y >= q[4-1], 3,
ifelse(y < q[5] & y >= q[5-1], 4,
ifelse(y < q[6] & y >= q[6-1], 5,
ifelse(y < q[7] & y >= q[7-1], 6,
ifelse(y < q[8] & y >= q[8-1], 7,
ifelse(y < q[9] & y >= q[9-1], 8,0)))))))))
length(q_q)
mean(q_q)
#hist(q_q, breaks = c(0:(k+1)),xlim = range(c(0:(k+1))))
#axis(1, c(0:(k+1)), las = 1)
stat_series <- rbind(c(0:8), p_p, cumsum(p_p), cumsum(p_p) / n)
stat_series
q_q_sort <- sort(q_q)
library(fitdistrplus)
library(ggplot2)
dev.off()
#df <- rbind(stat_series[1,], stat_series[4,])
#df
#plot(x = df[1,], y = df[2,], type = "s") # Моделированные
plot(ecdf(stat_series[4,] * k), col = "red", lwd = 2)
plot(ecdf(q * k), col = "green", lwd = 2, add = T)
#plot(stat_series[4,], type = "s")
axis(1, c(0:(k)), las = 1)
#fit_bin <- fitdist(q_q_sort, "nbinom", discrete = T)
#plot(cumsum(stat_series[3,-length(stat_series)]), type = "s")
#ggplot(as.data.frame(q_q_sort), aes(q_q_sort)) +
# stat_ecdf(geom = "step") +
# geom_step()
#cdfcomp(fit_bin)
#unique(q_q_sort)
##############################
#plot(dlnorm(c(0:1e4), 2, sqrt(0.2)))
k <- 8
p1 <- 0.7
n <- 140
p <- rep(NA, k+1)
q <- rep(NA, k+1)
for (i in 0:k)
{
p[i+1] <- choose(k, i)*p1^(i)*(1-p1)^(k-i)
}
p
sum(p)
q <- rep(NA, k+2)
q[1] <- 0
q[-1] <- cumsum(p)
q
#set.seed(1336)
y <- runif(n, 0, 1)
p_p <- rep(0,k+2)
p_p[1] <- sum(y < q[1])
for (i in 2:(k+2))
{
p_p[i] <- sum(ifelse(y < q[i] & y >= q[i-1], 1, 0))
}
p_p
#sum(p_p)
q_q <- rep(NA,k+1)
q_q <- ifelse(y < q[1], 0,
ifelse(y < q[2] & y >= q[2-1], 1,
ifelse(y < q[3] & y >= q[3-1], 2,
ifelse(y < q[4] & y >= q[4-1], 3,
ifelse(y < q[5] & y >= q[5-1], 4,
ifelse(y < q[6] & y >= q[6-1], 5,
ifelse(y < q[7] & y >= q[7-1], 6,
ifelse(y < q[8] & y >= q[8-1], 7,
ifelse(y < q[9] & y >= q[9-1], 8,0)))))))))
length(q_q)
mean(q_q)
#hist(q_q, breaks = c(0:(k+1)),xlim = range(c(0:(k+1))))
#axis(1, c(0:(k+1)), las = 1)
stat_series <- rbind(c(0:8), p_p, cumsum(p_p), cumsum(p_p) / n)
stat_series
q_q_sort <- sort(q_q)
library(fitdistrplus)
library(ggplot2)
dev.off()
#df <- rbind(stat_series[1,], stat_series[4,])
#df
#plot(x = df[1,], y = df[2,], type = "s") # Моделированные
plot(ecdf(stat_series[4,] * k), col = "red", lwd = 2)
plot(ecdf(q * k), col = "green", lwd = 2, add = T)
#plot(stat_series[4,], type = "s")
axis(1, c(0:(k)), las = 1)
#fit_bin <- fitdist(q_q_sort, "nbinom", discrete = T)
#plot(cumsum(stat_series[3,-length(stat_series)]), type = "s")
#ggplot(as.data.frame(q_q_sort), aes(q_q_sort)) +
# stat_ecdf(geom = "step") +
# geom_step()
#cdfcomp(fit_bin)
#unique(q_q_sort)
##############################
#plot(dlnorm(c(0:1e4), 2, sqrt(0.2)))
k <- 8
p1 <- 0.7
n <- 140
p <- rep(NA, k+1)
q <- rep(NA, k+1)
for (i in 0:k)
{
p[i+1] <- choose(k, i)*p1^(i)*(1-p1)^(k-i)
}
p
sum(p)
q <- rep(NA, k+2)
q[1] <- 0
q[-1] <- cumsum(p)
q
set.seed(16)
y <- runif(n, 0, 1)
p_p <- rep(0,k+2)
p_p[1] <- sum(y < q[1])
for (i in 2:(k+2))
{
p_p[i] <- sum(ifelse(y < q[i] & y >= q[i-1], 1, 0))
}
p_p
#sum(p_p)
q_q <- rep(NA,k+1)
q_q <- ifelse(y < q[1], 0,
ifelse(y < q[2] & y >= q[2-1], 1,
ifelse(y < q[3] & y >= q[3-1], 2,
ifelse(y < q[4] & y >= q[4-1], 3,
ifelse(y < q[5] & y >= q[5-1], 4,
ifelse(y < q[6] & y >= q[6-1], 5,
ifelse(y < q[7] & y >= q[7-1], 6,
ifelse(y < q[8] & y >= q[8-1], 7,
ifelse(y < q[9] & y >= q[9-1], 8,0)))))))))
length(q_q)
mean(q_q)
#hist(q_q, breaks = c(0:(k+1)),xlim = range(c(0:(k+1))))
#axis(1, c(0:(k+1)), las = 1)
stat_series <- rbind(c(0:8), p_p, cumsum(p_p), cumsum(p_p) / n)
stat_series
q_q_sort <- sort(q_q)
library(fitdistrplus)
library(ggplot2)
dev.off()
#df <- rbind(stat_series[1,], stat_series[4,])
#df
#plot(x = df[1,], y = df[2,], type = "s") # Моделированные
plot(ecdf(stat_series[4,] * k), col = "red", lwd = 2)
plot(ecdf(q * k), col = "green", lwd = 2, add = T)
#plot(stat_series[4,], type = "s")
axis(1, c(0:(k)), las = 1)
#fit_bin <- fitdist(q_q_sort, "nbinom", discrete = T)
#plot(cumsum(stat_series[3,-length(stat_series)]), type = "s")
#ggplot(as.data.frame(q_q_sort), aes(q_q_sort)) +
# stat_ecdf(geom = "step") +
# geom_step()
#cdfcomp(fit_bin)
#unique(q_q_sort)
##############################
#plot(dlnorm(c(0:1e4), 2, sqrt(0.2)))
set.seed(16111)
set.seed
k <- 8
p1 <- 0.7
n <- 140
p <- rep(NA, k+1)
q <- rep(NA, k+1)
for (i in 0:k)
{
p[i+1] <- choose(k, i)*p1^(i)*(1-p1)^(k-i)
}
p
sum(p)
q <- rep(NA, k+2)
q[1] <- 0
q[-1] <- cumsum(p)
q
set.seed(16111)
y <- runif(n, 0, 1)
p_p <- rep(0,k+2)
p_p[1] <- sum(y < q[1])
for (i in 2:(k+2))
{
p_p[i] <- sum(ifelse(y < q[i] & y >= q[i-1], 1, 0))
}
p_p
#sum(p_p)
q_q <- rep(NA,k+1)
q_q <- ifelse(y < q[1], 0,
ifelse(y < q[2] & y >= q[2-1], 1,
ifelse(y < q[3] & y >= q[3-1], 2,
ifelse(y < q[4] & y >= q[4-1], 3,
ifelse(y < q[5] & y >= q[5-1], 4,
ifelse(y < q[6] & y >= q[6-1], 5,
ifelse(y < q[7] & y >= q[7-1], 6,
ifelse(y < q[8] & y >= q[8-1], 7,
ifelse(y < q[9] & y >= q[9-1], 8,0)))))))))
length(q_q)
mean(q_q)
#hist(q_q, breaks = c(0:(k+1)),xlim = range(c(0:(k+1))))
#axis(1, c(0:(k+1)), las = 1)
stat_series <- rbind(c(0:8), p_p, cumsum(p_p), cumsum(p_p) / n)
stat_series
q_q_sort <- sort(q_q)
library(fitdistrplus)
library(ggplot2)
dev.off()
#df <- rbind(stat_series[1,], stat_series[4,])
#df
#plot(x = df[1,], y = df[2,], type = "s") # Моделированные
plot(ecdf(stat_series[4,] * k), col = "red", lwd = 2)
plot(ecdf(q * k), col = "green", lwd = 2, add = T)
#plot(stat_series[4,], type = "s")
axis(1, c(0:(k)), las = 1)
#fit_bin <- fitdist(q_q_sort, "nbinom", discrete = T)
#plot(cumsum(stat_series[3,-length(stat_series)]), type = "s")
#ggplot(as.data.frame(q_q_sort), aes(q_q_sort)) +
# stat_ecdf(geom = "step") +
# geom_step()
#cdfcomp(fit_bin)
#unique(q_q_sort)
##############################
#plot(dlnorm(c(0:1e4), 2, sqrt(0.2)))
plot(ecdf(stat_series[4,] * k), col = "red", lwd = 2, verticals = T)
plot(ecdf(q * k), col = "green", lwd = 2, add = T)
plot(ecdf(q * k), col = "green", lwd = 2, verticals = T, add = T)
#plot(stat_series[4,], type = "s")
axis(1, c(0:(k)), las = 1)
plot(ecdf(stat_series[4,] * k), col = "red", lwd = 2, verticals = T, "dotted")
plot(ecdf(stat_series[4,] * k), col = "red", lwd = 2, verticals = T, "dashed")
ecdf(stat_series[4,] * k)
ecdf(q * k)
q * k
stat_series[4,] * k
model <-     ecdf(stat_series[4,] * k)
theor <-     ecdf(q * k)
model
print(model)
stat_series[4,]
length(stat_series[4,] * k)
length(q * k)
ecdf(stat_series[4,] * k)
ecdf(q * k)
ecdf(q)
ecdf(stat_series[4,])
ecdf(as.vector(stat_series[4,]))
ecdf(as.vector(q))
cumsum(q)
cumsum(stat_series[4,])
ecdf(cumsum(q))
ecdf(cumsum(stat_series[4,]))
plot(ecdf(cumsum(q)))
plot(ecdf(cumsum(stat_series[4,])), col = "red", add = T)
plot(ecdf(stat_series[4,] * k), col = "red", lwd = 2, verticals = T)
plot(ecdf(q * k), col = "green", lwd = 2, verticals = T, add = T)
plot(ecdf(stat_series[4,] * k), col = "red", lwd = 2, verticals = T)
plot(ecdf(q * k), col = "black", lwd = 2, verticals = T, add = T)
plot(ecdf(cumsum(q)))
plot(ecdf(cumsum(stat_series[4,])), col = "red", add = T)
plot(ecdf(stat_series[4,] * k), col = "red", lwd = 1, verticals = T)
plot(ecdf(q * k), col = "black", lwd = 1, verticals = T, add = T)
plot(ecdf(stat_series[4,] * k), col = "red", lwd = 1, verticals = F)
plot(ecdf(q * k), col = "black", lwd = 1, verticals = F, add = T)
plot(ecdf(cumsum(q)))
plot(ecdf(cumsum(stat_series[4,])), col = "red", add = T)
max(abs(stat_series[4,] - q))
max(abs(k*(stat_series[4,] - q)))
max(abs((stat_series[4,] - q)))
mean(stat_series[4,])
mean(q)
sd(stat_series[4,])
sd(q)
q_q_sort
set.seed(161)
k <- 8
p1 <- 0.7
n <- 140
p <- rep(NA, k+1)
q <- rep(NA, k+1)
for (i in 0:k)
{
p[i+1] <- choose(k, i)*p1^(i)*(1-p1)^(k-i)
}
p
sum(p)
q <- rep(NA, k+2)
q[1] <- 0
q[-1] <- cumsum(p)
q
set.seed(161)
y <- runif(n, 0, 1)
p_p <- rep(0,k+2)
p_p[1] <- sum(y < q[1])
for (i in 2:(k+2))
{
p_p[i] <- sum(ifelse(y < q[i] & y >= q[i-1], 1, 0))
}
p_p
#sum(p_p)
q_q <- rep(NA,k+1)
q_q <- ifelse(y < q[1], 0,
ifelse(y < q[2] & y >= q[2-1], 1,
ifelse(y < q[3] & y >= q[3-1], 2,
ifelse(y < q[4] & y >= q[4-1], 3,
ifelse(y < q[5] & y >= q[5-1], 4,
ifelse(y < q[6] & y >= q[6-1], 5,
ifelse(y < q[7] & y >= q[7-1], 6,
ifelse(y < q[8] & y >= q[8-1], 7,
ifelse(y < q[9] & y >= q[9-1], 8,0)))))))))
length(q_q)
mean(q_q)
#hist(q_q, breaks = c(0:(k+1)),xlim = range(c(0:(k+1))))
#axis(1, c(0:(k+1)), las = 1)
stat_series <- rbind(c(0:8), p_p, cumsum(p_p), cumsum(p_p) / n)
stat_series
q_q_sort <- sort(q_q)
library(fitdistrplus)
library(ggplot2)
dev.off()
plot(ecdf(stat_series[4,] * k), col = "red", lwd = 1, verticals = F)
plot(ecdf(q * k), col = "black", lwd = 1, verticals = F, add = T)
length(stat_series[4,] * k)
length(q * k)
plot(ecdf(cumsum(q)))
plot(ecdf(cumsum(stat_series[4,])), col = "red", add = T)
#plot(stat_series[4,], type = "s")
axis(1, c(0:(k)), las = 1)
max(abs((stat_series[4,] - q)))
mean(stat_series[4,])
mean(q)
sd(stat_series[4,])
sd(q)
q_q_sort
p
q
y
p_p
p_p[1] <- sum(y < q[3])
p_p[1]
sum(y < q[3])
p_p[1] <- sum(y < q[1])
y < q[1]
y < q[9] & y >= q[9-1]
q_q <- rep(NA,k+1)
q_q <- ifelse(y < q[1], 0,
ifelse(y < q[2] & y >= q[2-1], 1,
ifelse(y < q[3] & y >= q[3-1], 2,
ifelse(y < q[4] & y >= q[4-1], 3,
ifelse(y < q[5] & y >= q[5-1], 4,
ifelse(y < q[6] & y >= q[6-1], 5,
ifelse(y < q[7] & y >= q[7-1], 6,
ifelse(y < q[8] & y >= q[8-1], 7,
ifelse(y < q[9] & y >= q[9-1], 8,NA)))))))))
q_q
q
q[10]
q_q <- ifelse(y < q[2], 0,
ifelse(y < q[3] & y >= q[3-1], 1,
ifelse(y < q[4] & y >= q[4-1], 2,
ifelse(y < q[5] & y >= q[5-1], 3,
ifelse(y < q[6] & y >= q[6-1], 4,
ifelse(y < q[7] & y >= q[7-1], 5,
ifelse(y < q[8] & y >= q[8-1], 6,
ifelse(y < q[9] & y >= q[9-1], 7,
ifelse(y < q[10] & y >= q[10-1], 8,NA)))))))))
q_q
q_q_sort <- sort(q_q)
q_q_sort
q
p
kolm_stat <- max(abs((stat_series[4,] - q)))
sqrt(n) * kolm_sta
sqrt(n) * kolm_stat
pbinom(0.05, 140, 0.7)
pbinom(0.33, 140, 0.7)
pbinom(1, 140, 0.7)
pbinom(100, 140, 0.7)
set.seed(518);  m = 10000;  u = runif(m);  x = qbinom(u, 60, 1/6;  mean(x)
quantile(q)
sqrt(n) * kolm_stat
quantile(q, .999)
quantile(y, .999)
quantile(y, .05)
quantile(q, .05)
quantile(stat_series[4,], .05)
quantile(stat_series[4,], .15)
stat_series[4,]
ks.test(q)
ks.test(q, stat_series[4,])
stat_series[4,]
q
p
q_q
y
length(q)
length(q_q)
length(y)
y*k
q_q
ks.test(q_q, y*k)
ks.test(unique(q_q), unique(y*k))
ks_test <- ks.test(unique(q_q), unique(y*k))
ks_test$statistic
ks_test <- ks.test(unique(q_q), unique(y*k), exact = 0.05)
ks_test$statistic
ks_test
ks_test
ks_test <- ks.test(unique(q_q), unique(y*k), exact = 0.33)
ks_test
ks_test <- ks.test(unique(q_q), unique(y*k))
ks_test
k_alpha <- sqrt(-(1/2) * ln( (1 - 0.05)/2 )) )
k_alpha <- sqrt(-(1/2) * ln( (1 - 0.05)/2 ))
k_alpha <- sqrt(-(1/2) * log2( (1 - 0.05)/2 ))
k_alpha
ks_test
k_alpha <- sqrt(-(1/2) * log2( (1 - 0.6934)/2 ))
k_alpha
k_alpha <- sqrt(-(1/2) * log2( (1 - 0.95)/2 ))
k_alpha
k_alpha <- sqrt(-(1/2) * log2( (1 - 0.05)/2 ))
k_alpha
k_alpha <- sqrt(-(1/2) * log2( (1 - 0.005)/2 ))
k_alpha
k_alpha <- sqrt(-(1/2) * log2( (1 - 0.0005)/2 ))
k_alpha
1
1
k_alpha <- sqrt(-(1/2) * log2( (1 - 0.0001)/2 ))
k_alpha
ks_test <- ks.test(unique(q_q))
q_q
q
ks_test <- ks.test(unique(q_q), q)
ks_test
length(q_q)
q_q
q_q / k
ks_test <- ks.test(unique(q_q / k), pbinom)
ks_test <- ks.test(unique(q_q / k), pbinom, 0.05)
ks_test <- ks.test(unique(q_q / k), pexp, 0.05)
ks_test
ks_test <- ks.test(unique(q_q / k), pexp, 0.15)
ks_test
ks_test <- ks.test(q_q / k, pbinom, 0.15)
ks_test <- ks.test(unique(q_q / k), pbinom, 0.15)
unique(q_q / k)
ks_test <- ks.test(q_q / k, pbinom, 0.15)
ks_test <- ks.test(q_q / k, pbinom, 0.15)
ks_test <- ks.test(unique(sort(q_q / k)), pbinom, 0.15)
pbinom
ks_test <- ks.test(unique(sort(q_q / k)), pbinom(0.15), 0.15)
ks_test
ks_test <- ks.test(unique(sort(q_q / k)), pbinom(0.7))
ks_test <- ks.test(unique(sort(q_q / k)), pbinom(0.7), 0.7)
ks_test <- ks.test(unique(sort(q_q / k)), pbinom(0.15), 0.7)
ks_test <- ks.test(unique(sort(q_q / k)), pbinom(0.15), 0.15)
ks_test
pbinom
ks_test <- ks.test(unique(sort(q_q / k)), pbinom(0.05, 140, 0.7))
ks_test
ks_test <- ks.test(unique(sort(q_q / k)), pbinom(0.15, 140, 0.7))
ks_test
ks_test <- ks.test(unique(sort(q_q / k)), pbinom(0.1, 140, 0.7))
ks_test
c(1:9)
pp <- dbinom(c(1:9), 9, 0.7)
pp
p
pp <- pbinom(c(1:9), 9, 0.7)
pp
pp <- pbinom(c(0:8), 9, 0.7)
pp
pp <- pbinom(c(0:9), 9, 0.7)
pp
pp <- dbinom(c(0:9), 9, 0.7)
pp
p
sum(pp)
p - pp
p
pp
pp <- dbinom(c(0:8), 9, 0.7)
sum(pp)
pp <- dbinom(c(0:8), 8, 0.7)
sum(pp)
pp
p - pp
p
pp
p <- dbinom(c(0:8), 8, 0.7)
q
qbinom(p)
qbinom(c(0:8), 8, 0.8)
pbinom(c(0:8), 8, 0.7)
q <- qbinom(c(0:8), 8, 0.7)
p_p
qbinom(p, 140, 0.7)
p
qbinom(p = p, 140, 0.7)
qbinom(p = q, 140, 0.7)
qbinom(p = p, 140, 0.7)
qbinom(p = p, 8, 0.7)
